* Web appendix

This is the web appendix to our manuscript entitled /Estimation of/
/time-specific intervention effects on continuously distributed/
/time-to-event outcomes by targeted maximum likelihood estimation/.

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results none :exports none  :session *R* :cache yes  
setwd("~/research/TMLE-from-2020june/survival-baseline/Web-appendix-iterative-competing-risks-tmle")
#+END_SRC

** Overview


** Load packages and functions

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results none :exports code  :session *R* :cache yes  
library(data.table) 
library(zoo)
library(glmnet)
library(survival)
library(stringr) 
library(ggplot2) 
library(ltmle)
library(nleqslv)
library(parallel)
library(foreach)
library(doParallel)
library(prodlim)
library(gridExtra)
library(survival)
library(riskRegression)
library(Matrix)
library(hdnom)
library(MASS)
library(xtable)
library(timereg)
library(cmprsk)
library(randomForestSRC)
#+END_SRC    

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results none :exports code  :session *R* :cache yes  
source("./R/sim.data.continuous.R") 
source("./R/contmle.R") 
source("./R/cox.loss.fun.R") 
source("./R/lebesgue.loss.fun.R") 
source("./R/cv.fun.R")     
source("./R/basis.fun.R")
source("./R/hal.screening.R") 
source("./R/fit.hal.R")   
source("./R/cox.sl.R")  
source("./R/fit.categorical.R")
source("./R/predict.catfit.R") 
#+END_SRC    


** Data example

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results none :exports code  :session *R* :cache yes  
data(follic, package="randomForestSRC")
follic <- data.table(follic)  

#-- convert variables: 
follic[, stage:=as.numeric(clinstg==2)] 
follic[, chemo:=as.numeric(ch=="Y")]
follic <- follic[, -c("clinstg", "ch"), with=FALSE]

#-- discretized age: 
follic[, age1 := 1*(age >= 45)]
follic[, age2 := 1*(age >= 58)]
follic[, age3 := 1*(age >= 65)]
#+END_SRC    


Events: 
#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports code  :session *R* :cache yes  
follic[, table(status)]    
#+END_SRC    

#+RESULTS[(2022-07-15 13:27:59) 779d41ed6dfc11d14d2e492d99dfe97f4c1cf8dd]:
: status
:   0   1   2 
: 193 272  76

Distribution of observed time to event: 
#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports code  :session *R* :cache yes  
follic[, summary(time)]   
#+END_SRC    

#+RESULTS[(2022-07-15 13:28:01) 13a4f31fa10a1089d88f615380aa8e15b7567fad]:
:      Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
:  0.002738  1.919233  5.464750  7.393791 10.850103 31.101985

Events before time-horizon of interest:
#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports code  :session *R* :cache yes  
follic[time<=10, table(status)]    
#+END_SRC    

#+RESULTS[(2022-07-15 13:28:04) 047cadef485b3bc1d6dafa1f3a75684624419892]:
: status
:   0   1   2 
:  95 251  46


** Baseline hazard estimation

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results none :exports none  :session *R* :cache yes
#######################################################################################
  
#--- informative censoring
bhaz.cox <-
    contmle(follic, estimation=list("outcome"=list(fit="cox",
                                                   model=Surv(time, status==1)~chemo+stage+hgb+age1+age2+age3+age+age.squared,
                                                   changepoint = 0.1,
                                                   lambda.cvs=seq(0.008, 0.02, length=10)),
                                    "cens"=list(fit="cox",
                                                changepoint = 0.5,#1.1,#0.8,#0.5
                                                model=Surv(time, status==0)~chemo+stage+hgb+age),
                                    "cr2"=list(fit="cox",#"sl",
                                               model=Surv(time, status==2)~chemo+stage+hgb+age+age1+age2+age3+age.squared)
                                    ),
            treat.model=chemo~stage+hgb+age,
            treat.effect="ate",
            no.small.steps=500,
            sl.models=list(mod1=list(Surv(time, status==1)~chemo+stage+hgb+age, t0 = (1:50)/2000),
                           mod2=list(Surv(time, status==1)~chemo+stage+hgb+age+age.squared, t0 = (1:50)/2000),
                           mod3=list(Surv(time, status==1)~chemo+stage+hgb+age+age.squared+hgb.squared, t0 = (1:50)/2000)), 
            output.km=TRUE,
            output.bhaz=TRUE, 
            V=3, lambda.cvs=seq(0.1, 0.03, length=10), maxit=1e5, penalize.time=FALSE,
            verbose=TRUE,
            iterative=TRUE,
            tau=20, target=1)

#--- uninformative censoring
bhaz.uninformative.cens <-
    contmle(follic, estimation=list("outcome"=list(fit="cox",
                                                   model=Surv(time, status==1)~chemo+stage+hgb+age.squared,
                                                   changepoint = 0.1,
                                                   lambda.cvs=seq(0.008, 0.02, length=10)),
                                    "cens"=list(fit="cox", model=Surv(time, status==0)~1),
                                    "cr2"=list(fit="cox",#"sl",
                                                      model=Surv(time, status==2)~chemo+stage+hgb+age.squared)
                                    ),
            treat.model=chemo~stage+hgb+age,
            treat.effect="ate", no.small.steps=500,
            sl.models=list(mod1=list(Surv(time, status==1)~chemo+stage+hgb+age, t0
                                     = (1:50)/2000)), output.km=TRUE, output.bhaz=TRUE, V=3,
            lambda.cvs=seq(0.1, 0.03, length=10), maxit=1e5, penalize.time=FALSE,
            verbose=TRUE, iterative=TRUE, tau=20, target=1)

#######################################################################################

bhazs <- bhaz.cox[[1]]

bhazs[, chaz1 := cumsum(dhaz1*exp1), by = "chemo"]
bhazs[, chaz2 := cumsum(dhaz2*exp2), by = "chemo"] 
bhazs[, chaz0 := cumsum(dhaz0*exp0), by = "chemo"]

#######################################################################################

#+END_SRC



#+BEGIN_SRC R :results file graphics :file ./figures/fig-log-hazards-log-time.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs.long <- melt(bhazs, id.vars=c("chemo", "time"))  
bhazs.long[, variable2:=substr(variable,1,4)]    
bhazs.long <- bhazs.long[variable2=="chaz"][, status:=paste0("status = ", gsub("chaz", "", variable))]
bhazs.long[, chemo:=paste0("chemo = ", chemo)]
 
ggplot(bhazs.long) + geom_point(aes(x=log(time), y=log(value))) +
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
        strip.text = element_text(size=16), 
        plot.title = element_text(size = 16, hjust = 0.9),  
        strip.background = element_blank())+ 
  ylab("log(chaz)") + ggtitle("Log cumulative hazards as functions of log observed event times:")
#+END_SRC

#+RESULTS[(2022-07-15 13:28:18) eb15222e3230102fae495beba14a81c95884138d]:
[[file:./figures/fig-log-hazards-log-time.png]]

Idea: Fit Weibull distributions that are allowed change over time,
corresponding to enforcing piecewise linearity in the previous plots.

*** Cause one events (with one changepoint)

#+BEGIN_SRC R :results file graphics :file ./figures/fig-log-hazards-log-time-hazard1-changepoint.png :exports none :session *R* :cache yes :width 500 :height 500
log.t0.1 <- -0.5 
log.t1.1 <- 0.75   
log.t2.1 <- 2

kmin.1.t1.1 <- min((1:nrow(bhazs[chaz1>0 & chemo==1]))[log(bhazs[chaz1>0 & chemo==1][["time"]])>log.t0.1])
kmax.1.t1.1 <- max((1:nrow(bhazs[chaz1>0 & chemo==1]))[log(bhazs[chaz1>0 & chemo==1][["time"]])<log.t1.1])
kmin.1.t1.0 <- min((1:nrow(bhazs[chaz1>0 & chemo==0]))[log(bhazs[chaz1>0 & chemo==0][["time"]])>log.t0.1])
kmax.1.t1.0 <- max((1:nrow(bhazs[chaz1>0 & chemo==0]))[log(bhazs[chaz1>0 & chemo==0][["time"]])<log.t1.1])

kmin.1.t2.1 <- min((1:nrow(bhazs[chaz1>0 & chemo==1]))[log(bhazs[chaz1>0 & chemo==1][["time"]])>log.t1.1])
kmax.1.t2.1 <- max((1:nrow(bhazs[chaz1>0 & chemo==1]))[log(bhazs[chaz1>0 & chemo==1][["time"]])<log.t2.1])
kmin.1.t2.0 <- min((1:nrow(bhazs[chaz1>0 & chemo==0]))[log(bhazs[chaz1>0 & chemo==0][["time"]])>log.t1.1])
kmax.1.t2.0 <- max((1:nrow(bhazs[chaz1>0 & chemo==0]))[log(bhazs[chaz1>0 & chemo==0][["time"]])<log.t2.1])

#plot(log(bhazs[chaz1>0 & chemo==1][["time"]])[kmin.1.t1.1:kmax.1.t1.1],log(bhazs[chaz1>0 & chemo==1][["chaz1"]][kmin.1.t1.1:kmax.1.t1.1]))
fit.status1.t1.1 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==1][kmin.1.t1.1:kmax.1.t1.1])
#abline(a = coef(fit.status1.t1.1)[1], b = coef(fit.status1.t1.1)[2], col = "red")
(gamma.status1.t1.1 <- coef(fit.status1.t1.1)[2])
(lambda.status1.t1.1 <- exp(coef(fit.status1.t1.1)[1]/gamma.status1.t1.1))
#plot(log(bhazs[chaz1>0 & chemo==0][["time"]])[kmin.1.t1.0:kmax.1.t1.0],log(bhazs[chaz1>0 & chemo==0][["chaz1"]][kmin.1.t1.0:kmax.1.t1.0]))
fit.status1.t1.0 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==0][kmin.1.t1.0:kmax.1.t1.0])
#abline(a = coef(fit.status1.t1.0)[1], b = coef(fit.status1.t1.0)[2], col = "red")
(gamma.status1.t1.0 <- coef(fit.status1.t1.0)[2])
(lambda.status1.t1.0 <- exp(coef(fit.status1.t1.0)[1]/gamma.status1.t1.0))

# plot(log(bhazs[chaz1>0 & chemo==1][["time"]])[kmin.1.t2.1:kmax.1.t2.1],log(bhazs[chaz1>0 & chemo==1][["chaz1"]][kmin.1.t2.1:kmax.1.t2.1]))
fit.status1.t2.1 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==1][kmin.1.t2.1:kmax.1.t2.1])
#abline(a = coef(fit.status1.t2.1)[1], b = coef(fit.status1.t2.1)[2], col = "red")
(gamma.status1.t2.1 <- coef(fit.status1.t2.1)[2])
(lambda.status1.t2.1 <- exp(coef(fit.status1.t2.1)[1]/gamma.status1.t2.1))
#plot(log(bhazs[chaz1>0 & chemo==0][["time"]])[kmin.1.t2.0:kmax.1.t2.0],log(bhazs[chaz1>0 & chemo==0][["chaz1"]][kmin.1.t2.0:kmax.1.t2.0]))
fit.status1.t2.0 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==0][kmin.1.t2.0:kmax.1.t2.0])
#abline(a = coef(fit.status1.t2.0)[1], b = coef(fit.status1.t2.0)[2], col = "red")
(gamma.status1.t2.0 <- coef(fit.status1.t2.0)[2])
(lambda.status1.t2.0 <- exp(coef(fit.status1.t2.0)[1]/gamma.status1.t2.0))

bhazs.long[time>=exp(log.t0.1) & time<=exp(log.t1.1) & chemo=="chemo = 1" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t1.1*log(lambda.status1.t1.1) + gamma.status1.t1.1*log(time))]
bhazs.long[time>=exp(log.t0.1) & time<=exp(log.t1.1) & chemo=="chemo = 0" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t1.0*log(lambda.status1.t1.0) + gamma.status1.t1.0*log(time))]

bhazs.long[time>=exp(log.t1.1) & time<=exp(log.t2.1) & chemo=="chemo = 1" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t2.1*log(lambda.status1.t2.1) + gamma.status1.t2.1*log(time))]
bhazs.long[time>=exp(log.t1.1) & time<=exp(log.t2.1) & chemo=="chemo = 0" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t2.0*log(lambda.status1.t2.0) + gamma.status1.t2.0*log(time))]

ggplot(bhazs.long[!is.na(fit.chaz) & status=="status = 1"]) + geom_point(aes(x=log(time), y=log(value))) +
  geom_line(aes(log(time), y=log(fit.chaz)), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
        plot.title = element_text(size = 16, hjust = -0.15),
        strip.text = element_text(size=16), 
        strip.background = element_blank())+  
  ylab("log(chaz)") + ggtitle("Fitting two straight lines:")
#+END_SRC

#+RESULTS[(2022-07-15 13:28:27) 9416c855acfa1080d750a5d397622bce045e8d54]:
[[file:./figures/fig-log-hazards-log-time-hazard1-changepoint.png]]


#+BEGIN_SRC R :results file graphics :file ./figures/fig-hazards-time-hazard1-changepoint.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs.long[time<=exp(log.t1.1) & chemo=="chemo = 1" & status=="status = 1",  
           fit.chaz:=exp(gamma.status1.t1.1*log(lambda.status1.t1.1) + gamma.status1.t1.1*log(time))]
bhazs.long[time<=exp(log.t1.1) & chemo=="chemo = 0" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t1.0*log(lambda.status1.t1.0) + gamma.status1.t1.0*log(time))]
bhazs.long[time>=exp(log.t1.1) & chemo=="chemo = 1" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t2.1*log(lambda.status1.t2.1) + gamma.status1.t2.1*log(time))]
bhazs.long[time>=exp(log.t1.1) & chemo=="chemo = 0" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t2.0*log(lambda.status1.t2.0) + gamma.status1.t2.0*log(time))]
 
ggplot(bhazs.long[!is.na(fit.chaz) & status=="status = 1"]) +
  geom_point(aes(x=time, y=value)) + 
  geom_line(aes(time, y=fit.chaz), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
        strip.text = element_text(size=16),
        plot.title = element_text(size = 16, hjust = -0.3),
        strip.background = element_blank())+
  ylab("chaz") + ggtitle("Resulting cumulative baseline hazards:") 
#+END_SRC

#+RESULTS[(2022-07-15 13:28:30) 7cdf8b2a2dffb91fbc7e8312e32fc87eaf4007c7]:
[[file:./figures/fig-hazards-time-hazard1-changepoint.png]]

*** Cause one events (add changepoint)

#+BEGIN_SRC R :results file graphics :file ./figures/fig-log-hazards-log-time-hazard1-2changepoints.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs <- bhaz.cox[[1]]  
 
bhazs[, chaz1 := cumsum(dhaz1*exp1), by = "chemo"]
bhazs[, chaz2 := cumsum(dhaz2*exp2), by = "chemo"] 
bhazs[, chaz0 := cumsum(dhaz0*exp0), by = "chemo"]

bhazs.long <- melt(bhazs, id.vars=c("chemo", "time")) 
bhazs.long[, variable2:=substr(variable,1,4)] 
bhazs.long <- bhazs.long[variable2=="chaz"][, status:=paste0("status = ", gsub("chaz", "", variable))]
bhazs.long[, chemo:=paste0("chemo = ", chemo)]

log.t0.1 <- -2#-0.5
log.t1.1 <- -0.5#0.75
log.t2.1 <- 2.5#2
log.t3.1 <- 3.5#3

kmin.1.t1.1 <- min((1:nrow(bhazs[chaz1>0 & chemo==1]))[log(bhazs[chaz1>0 & chemo==1][["time"]])>log.t0.1])
kmax.1.t1.1 <- max((1:nrow(bhazs[chaz1>0 & chemo==1]))[log(bhazs[chaz1>0 & chemo==1][["time"]])<log.t1.1])
kmin.1.t1.0 <- min((1:nrow(bhazs[chaz1>0 & chemo==0]))[log(bhazs[chaz1>0 & chemo==0][["time"]])>log.t0.1])
kmax.1.t1.0 <- max((1:nrow(bhazs[chaz1>0 & chemo==0]))[log(bhazs[chaz1>0 & chemo==0][["time"]])<log.t1.1])

kmin.1.t2.1 <- min((1:nrow(bhazs[chaz1>0 & chemo==1]))[log(bhazs[chaz1>0 & chemo==1][["time"]])>log.t1.1])
kmax.1.t2.1 <- max((1:nrow(bhazs[chaz1>0 & chemo==1]))[log(bhazs[chaz1>0 & chemo==1][["time"]])<log.t2.1])
kmin.1.t2.0 <- min((1:nrow(bhazs[chaz1>0 & chemo==0]))[log(bhazs[chaz1>0 & chemo==0][["time"]])>log.t1.1])
kmax.1.t2.0 <- max((1:nrow(bhazs[chaz1>0 & chemo==0]))[log(bhazs[chaz1>0 & chemo==0][["time"]])<log.t2.1])

kmin.1.t3.1 <- min((1:nrow(bhazs[chaz0>0 & chemo==1]))[log(bhazs[chaz0>0 & chemo==1][["time"]])>log.t2.1])
kmax.1.t3.1 <- max((1:nrow(bhazs[chaz0>0 & chemo==1]))[log(bhazs[chaz0>0 & chemo==1][["time"]])<log.t3.1])
kmin.1.t3.0 <- min((1:nrow(bhazs[chaz0>0 & chemo==0]))[log(bhazs[chaz0>0 & chemo==0][["time"]])>log.t2.1])
kmax.1.t3.0 <- max((1:nrow(bhazs[chaz0>0 & chemo==0]))[log(bhazs[chaz0>0 & chemo==0][["time"]])<log.t3.1])


#plot(log(bhazs[chaz1>0 & chemo==1][["time"]])[kmin.1.t1.1:kmax.1.t1.1],log(bhazs[chaz1>0 & chemo==1][["chaz1"]][kmin.1.t1.1:kmax.1.t1.1]))
fit.status1.t1.1 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==1][kmin.1.t1.1:kmax.1.t1.1])
#abline(a = coef(fit.status1.t1.1)[1], b = coef(fit.status1.t1.1)[2], col = "red")
(gamma.status1.t1.1 <- coef(fit.status1.t1.1)[2])
(lambda.status1.t1.1 <- exp(coef(fit.status1.t1.1)[1]/gamma.status1.t1.1))
#plot(log(bhazs[chaz1>0 & chemo==0][["time"]])[kmin.1.t1.0:kmax.1.t1.0],log(bhazs[chaz1>0 & chemo==0][["chaz1"]][kmin.1.t1.0:kmax.1.t1.0]))
fit.status1.t1.0 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==0][kmin.1.t1.0:kmax.1.t1.0])
#abline(a = coef(fit.status1.t1.0)[1], b = coef(fit.status1.t1.0)[2], col = "red")
(gamma.status1.t1.0 <- coef(fit.status1.t1.0)[2])
(lambda.status1.t1.0 <- exp(coef(fit.status1.t1.0)[1]/gamma.status1.t1.0))

# plot(log(bhazs[chaz1>0 & chemo==1][["time"]])[kmin.1.t2.1:kmax.1.t2.1],log(bhazs[chaz1>0 & chemo==1][["chaz1"]][kmin.1.t2.1:kmax.1.t2.1]))
fit.status1.t2.1 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==1][kmin.1.t2.1:kmax.1.t2.1])
#abline(a = coef(fit.status1.t2.1)[1], b = coef(fit.status1.t2.1)[2], col = "red")
(gamma.status1.t2.1 <- coef(fit.status1.t2.1)[2])
(lambda.status1.t2.1 <- exp(coef(fit.status1.t2.1)[1]/gamma.status1.t2.1))
#plot(log(bhazs[chaz1>0 & chemo==0][["time"]])[kmin.1.t2.0:kmax.1.t2.0],log(bhazs[chaz1>0 & chemo==0][["chaz1"]][kmin.1.t2.0:kmax.1.t2.0]))
fit.status1.t2.0 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==0][kmin.1.t2.0:kmax.1.t2.0])
#abline(a = coef(fit.status1.t2.0)[1], b = coef(fit.status1.t2.0)[2], col = "red")
(gamma.status1.t2.0 <- coef(fit.status1.t2.0)[2])
(lambda.status1.t2.0 <- exp(coef(fit.status1.t2.0)[1]/gamma.status1.t2.0))

# plot(log(bhazs[chaz1>0 & chemo==1][["time"]])[kmin.1.t3.1:kmax.1.t3.1],log(bhazs[chaz1>0 & chemo==1][["chaz1"]][kmin.1.t3.1:kmax.1.t3.1]))
fit.status1.t3.1 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==1][kmin.1.t3.1:kmax.1.t3.1])
#abline(a = coef(fit.status1.t3.1)[1], b = coef(fit.status1.t3.1)[2], col = "red")
(gamma.status1.t3.1 <- coef(fit.status1.t3.1)[2])
(lambda.status1.t3.1 <- exp(coef(fit.status1.t3.1)[1]/gamma.status1.t3.1))
#plot(log(bhazs[chaz1>0 & chemo==0][["time"]])[kmin.1.t3.0:kmax.1.t3.0],log(bhazs[chaz1>0 & chemo==0][["chaz1"]][kmin.1.t3.0:kmax.1.t3.0]))
fit.status1.t3.0 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==0][kmin.1.t3.0:kmax.1.t3.0])
#abline(a = coef(fit.status1.t3.0)[1], b = coef(fit.status1.t3.0)[2], col = "red")
(gamma.status1.t3.0 <- coef(fit.status1.t3.0)[2])
(lambda.status1.t3.0 <- exp(coef(fit.status1.t3.0)[1]/gamma.status1.t3.0))

bhazs.long[time>=exp(log.t0.1) & time<=exp(log.t1.1) & chemo=="chemo = 1" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t1.1*log(lambda.status1.t1.1) + gamma.status1.t1.1*log(time))]
bhazs.long[time>=exp(log.t0.1) & time<=exp(log.t1.1) & chemo=="chemo = 0" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t1.0*log(lambda.status1.t1.0) + gamma.status1.t1.0*log(time))]
bhazs.long[time>=exp(log.t1.1) & time<=exp(log.t2.1) & chemo=="chemo = 1" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t2.1*log(lambda.status1.t2.1) + gamma.status1.t2.1*log(time))]
bhazs.long[time>=exp(log.t1.1) & time<=exp(log.t2.1) & chemo=="chemo = 0" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t2.0*log(lambda.status1.t2.0) + gamma.status1.t2.0*log(time))]
bhazs.long[time>=exp(log.t2.1) & time<=exp(log.t3.1) & chemo=="chemo = 1" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t3.1*log(lambda.status1.t3.1) + gamma.status1.t3.1*log(time))]
bhazs.long[time>=exp(log.t2.1) & time<=exp(log.t3.1) & chemo=="chemo = 0" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t3.0*log(lambda.status1.t3.0) + gamma.status1.t3.0*log(time))]

ggplot(bhazs.long[!is.na(fit.chaz) & status=="status = 1"]) + geom_point(aes(x=log(time), y=log(value))) +
  geom_line(aes(log(time), y=log(fit.chaz)), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
        plot.title = element_text(size = 16, hjust = -0.15),
        strip.text = element_text(size=16), 
        strip.background = element_blank())+  
  ylab("log(chaz)") + ggtitle("Fitting three straight lines:")

#+END_SRC

#+RESULTS[(2022-07-15 13:28:32) c1c6235efd9a64d4ff19c45ec122cbd1560d1747]:
[[file:./figures/fig-log-hazards-log-time-hazard1-2changepoints.png]]


#+BEGIN_SRC R :results file graphics :file ./figures/fig-hazards-time-hazard1-2changepoints.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs.long[time<=exp(log.t1.1) & chemo=="chemo = 1" & status=="status = 1",   
           fit.chaz:=exp(gamma.status1.t1.1*log(lambda.status1.t1.1) + gamma.status1.t1.1*log(time))]
bhazs.long[time<=exp(log.t1.1) & chemo=="chemo = 0" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t1.0*log(lambda.status1.t1.0) + gamma.status1.t1.0*log(time))]
bhazs.long[time>=exp(log.t1.1) & time<=exp(log.t2.1) & chemo=="chemo = 1" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t2.1*log(lambda.status1.t2.1) + gamma.status1.t2.1*log(time))]
bhazs.long[time>=exp(log.t1.1) & time<=exp(log.t2.1) & chemo=="chemo = 0" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t2.0*log(lambda.status1.t2.0) + gamma.status1.t2.0*log(time))]
bhazs.long[time>=exp(log.t2.1) & time<=exp(log.t3.1) & chemo=="chemo = 1" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t3.1*log(lambda.status1.t3.1) + gamma.status1.t3.1*log(time))]
bhazs.long[time>=exp(log.t2.1) & time<=exp(log.t3.1) & chemo=="chemo = 0" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t3.0*log(lambda.status1.t3.0) + gamma.status1.t3.0*log(time))]
 
ggplot(bhazs.long[!is.na(fit.chaz) & status=="status = 1"]) +
  geom_point(aes(x=time, y=value)) +
  geom_line(aes(time, y=fit.chaz), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
        strip.text = element_text(size=16),
        plot.title = element_text(size = 16, hjust = -0.3),
        strip.background = element_blank())+
  ylab("chaz") + ggtitle("Resulting cumulative baseline hazards:") 
#+END_SRC

#+RESULTS[(2022-07-15 13:28:35) 2f6078bc7274e66498b75dea41e6b86d0298c765]:
[[file:./figures/fig-hazards-time-hazard1-2changepoints.png]]


*** Cause one events (three changepoints)

#+BEGIN_SRC R :results file graphics :file ./figures/fig-log-hazards-log-time-hazard1-3changepoints.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs <- bhaz.cox[[1]]  
 
bhazs[, chaz1 := cumsum(dhaz1*exp1), by = "chemo"]
bhazs[, chaz2 := cumsum(dhaz2*exp2), by = "chemo"] 
bhazs[, chaz0 := cumsum(dhaz0*exp0), by = "chemo"]

bhazs.long <- melt(bhazs, id.vars=c("chemo", "time"))  
bhazs.long[, variable2:=substr(variable,1,4)] 
bhazs.long <- bhazs.long[variable2=="chaz"][, status:=paste0("status = ", gsub("chaz", "", variable))]
bhazs.long[, chemo:=paste0("chemo = ", chemo)]

log.t0.1 <- -1.2#-2#-0.5
log.t1.1 <- 0.75#-0.5#0.75
log.t2.1 <- 2.5#2
log.t3.1 <- 3.15
log.t4.1 <- 3.5#3

kmin.1.t1.1 <- min((1:nrow(bhazs[chaz1>0 & chemo==1]))[log(bhazs[chaz1>0 & chemo==1][["time"]])>log.t0.1])
kmax.1.t1.1 <- max((1:nrow(bhazs[chaz1>0 & chemo==1]))[log(bhazs[chaz1>0 & chemo==1][["time"]])<log.t1.1])
kmin.1.t1.0 <- min((1:nrow(bhazs[chaz1>0 & chemo==0]))[log(bhazs[chaz1>0 & chemo==0][["time"]])>log.t0.1])
kmax.1.t1.0 <- max((1:nrow(bhazs[chaz1>0 & chemo==0]))[log(bhazs[chaz1>0 & chemo==0][["time"]])<log.t1.1])

kmin.1.t2.1 <- min((1:nrow(bhazs[chaz1>0 & chemo==1]))[log(bhazs[chaz1>0 & chemo==1][["time"]])>log.t1.1])
kmax.1.t2.1 <- max((1:nrow(bhazs[chaz1>0 & chemo==1]))[log(bhazs[chaz1>0 & chemo==1][["time"]])<log.t2.1])
kmin.1.t2.0 <- min((1:nrow(bhazs[chaz1>0 & chemo==0]))[log(bhazs[chaz1>0 & chemo==0][["time"]])>log.t1.1])
kmax.1.t2.0 <- max((1:nrow(bhazs[chaz1>0 & chemo==0]))[log(bhazs[chaz1>0 & chemo==0][["time"]])<log.t2.1])

kmin.1.t3.1 <- min((1:nrow(bhazs[chaz0>0 & chemo==1]))[log(bhazs[chaz0>0 & chemo==1][["time"]])>log.t2.1])
kmax.1.t3.1 <- max((1:nrow(bhazs[chaz0>0 & chemo==1]))[log(bhazs[chaz0>0 & chemo==1][["time"]])<log.t3.1])
kmin.1.t3.0 <- min((1:nrow(bhazs[chaz0>0 & chemo==0]))[log(bhazs[chaz0>0 & chemo==0][["time"]])>log.t2.1])
kmax.1.t3.0 <- max((1:nrow(bhazs[chaz0>0 & chemo==0]))[log(bhazs[chaz0>0 & chemo==0][["time"]])<log.t3.1])

kmin.1.t4.1 <- min((1:nrow(bhazs[chaz0>0 & chemo==1]))[log(bhazs[chaz0>0 & chemo==1][["time"]])>log.t3.1])
kmax.1.t4.1 <- max((1:nrow(bhazs[chaz0>0 & chemo==1]))[log(bhazs[chaz0>0 & chemo==1][["time"]])<log.t4.1])
kmin.1.t4.0 <- min((1:nrow(bhazs[chaz0>0 & chemo==0]))[log(bhazs[chaz0>0 & chemo==0][["time"]])>log.t3.1])
kmax.1.t4.0 <- max((1:nrow(bhazs[chaz0>0 & chemo==0]))[log(bhazs[chaz0>0 & chemo==0][["time"]])<log.t4.1])

#plot(log(bhazs[chaz1>0 & chemo==1][["time"]])[kmin.1.t1.1:kmax.1.t1.1],log(bhazs[chaz1>0 & chemo==1][["chaz1"]][kmin.1.t1.1:kmax.1.t1.1]))
fit.status1.t1.1 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==1][kmin.1.t1.1:kmax.1.t1.1])
#abline(a = coef(fit.status1.t1.1)[1], b = coef(fit.status1.t1.1)[2], col = "red")
(gamma.status1.t1.1 <- coef(fit.status1.t1.1)[2])
(lambda.status1.t1.1 <- exp(coef(fit.status1.t1.1)[1]/gamma.status1.t1.1))
#plot(log(bhazs[chaz1>0 & chemo==0][["time"]])[kmin.1.t1.0:kmax.1.t1.0],log(bhazs[chaz1>0 & chemo==0][["chaz1"]][kmin.1.t1.0:kmax.1.t1.0]))
fit.status1.t1.0 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==0][kmin.1.t1.0:kmax.1.t1.0])
#abline(a = coef(fit.status1.t1.0)[1], b = coef(fit.status1.t1.0)[2], col = "red")
(gamma.status1.t1.0 <- coef(fit.status1.t1.0)[2])
(lambda.status1.t1.0 <- exp(coef(fit.status1.t1.0)[1]/gamma.status1.t1.0))

# plot(log(bhazs[chaz1>0 & chemo==1][["time"]])[kmin.1.t2.1:kmax.1.t2.1],log(bhazs[chaz1>0 & chemo==1][["chaz1"]][kmin.1.t2.1:kmax.1.t2.1]))
fit.status1.t2.1 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==1][kmin.1.t2.1:kmax.1.t2.1])
#abline(a = coef(fit.status1.t2.1)[1], b = coef(fit.status1.t2.1)[2], col = "red")
(gamma.status1.t2.1 <- coef(fit.status1.t2.1)[2])
(lambda.status1.t2.1 <- exp(coef(fit.status1.t2.1)[1]/gamma.status1.t2.1))
#plot(log(bhazs[chaz1>0 & chemo==0][["time"]])[kmin.1.t2.0:kmax.1.t2.0],log(bhazs[chaz1>0 & chemo==0][["chaz1"]][kmin.1.t2.0:kmax.1.t2.0]))
fit.status1.t2.0 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==0][kmin.1.t2.0:kmax.1.t2.0])
#abline(a = coef(fit.status1.t2.0)[1], b = coef(fit.status1.t2.0)[2], col = "red")
(gamma.status1.t2.0 <- coef(fit.status1.t2.0)[2])
(lambda.status1.t2.0 <- exp(coef(fit.status1.t2.0)[1]/gamma.status1.t2.0))

# plot(log(bhazs[chaz1>0 & chemo==1][["time"]])[kmin.1.t3.1:kmax.1.t3.1],log(bhazs[chaz1>0 & chemo==1][["chaz1"]][kmin.1.t3.1:kmax.1.t3.1]))
fit.status1.t3.1 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==1][kmin.1.t3.1:kmax.1.t3.1])
#abline(a = coef(fit.status1.t3.1)[1], b = coef(fit.status1.t3.1)[2], col = "red")
(gamma.status1.t3.1 <- coef(fit.status1.t3.1)[2])
(lambda.status1.t3.1 <- exp(coef(fit.status1.t3.1)[1]/gamma.status1.t3.1))
#plot(log(bhazs[chaz1>0 & chemo==0][["time"]])[kmin.1.t3.0:kmax.1.t3.0],log(bhazs[chaz1>0 & chemo==0][["chaz1"]][kmin.1.t3.0:kmax.1.t3.0]))
fit.status1.t3.0 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==0][kmin.1.t3.0:kmax.1.t3.0])
#abline(a = coef(fit.status1.t3.0)[1], b = coef(fit.status1.t3.0)[2], col = "red")
(gamma.status1.t3.0 <- coef(fit.status1.t3.0)[2])
(lambda.status1.t3.0 <- exp(coef(fit.status1.t3.0)[1]/gamma.status1.t3.0))

# plot(log(bhazs[chaz1>0 & chemo==1][["time"]])[kmin.1.t4.1:kmax.1.t4.1],log(bhazs[chaz1>0 & chemo==1][["chaz1"]][kmin.1.t4.1:kmax.1.t4.1]))
fit.status1.t4.1 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==1][kmin.1.t4.1:kmax.1.t4.1])
#abline(a = coef(fit.status1.t4.1)[1], b = coef(fit.status1.t4.1)[2], col = "red")
(gamma.status1.t4.1 <- coef(fit.status1.t4.1)[2])
(lambda.status1.t4.1 <- exp(coef(fit.status1.t4.1)[1]/gamma.status1.t4.1))
#plot(log(bhazs[chaz1>0 & chemo==0][["time"]])[kmin.1.t4.0:kmax.1.t4.0],log(bhazs[chaz1>0 & chemo==0][["chaz1"]][kmin.1.t4.0:kmax.1.t4.0]))
fit.status1.t4.0 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==0][kmin.1.t4.0:kmax.1.t4.0])
#abline(a = coef(fit.status1.t4.0)[1], b = coef(fit.status1.t4.0)[2], col = "red")
(gamma.status1.t4.0 <- coef(fit.status1.t4.0)[2])
(lambda.status1.t4.0 <- exp(coef(fit.status1.t4.0)[1]/gamma.status1.t4.0))

bhazs.long[time>=exp(log.t0.1) & time<=exp(log.t1.1) & chemo=="chemo = 1" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t1.1*log(lambda.status1.t1.1) + gamma.status1.t1.1*log(time))]
bhazs.long[time>=exp(log.t0.1) & time<=exp(log.t1.1) & chemo=="chemo = 0" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t1.0*log(lambda.status1.t1.0) + gamma.status1.t1.0*log(time))]
bhazs.long[time>=exp(log.t1.1) & time<=exp(log.t2.1) & chemo=="chemo = 1" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t2.1*log(lambda.status1.t2.1) + gamma.status1.t2.1*log(time))]
bhazs.long[time>=exp(log.t1.1) & time<=exp(log.t2.1) & chemo=="chemo = 0" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t2.0*log(lambda.status1.t2.0) + gamma.status1.t2.0*log(time))]
bhazs.long[time>=exp(log.t2.1) & time<=exp(log.t3.1) & chemo=="chemo = 1" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t3.1*log(lambda.status1.t3.1) + gamma.status1.t3.1*log(time))]
bhazs.long[time>=exp(log.t2.1) & time<=exp(log.t3.1) & chemo=="chemo = 0" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t3.0*log(lambda.status1.t3.0) + gamma.status1.t3.0*log(time))]
bhazs.long[time>=exp(log.t3.1) & time<=exp(log.t4.1) & chemo=="chemo = 1" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t4.1*log(lambda.status1.t4.1) + gamma.status1.t4.1*log(time))]
bhazs.long[time>=exp(log.t3.1) & time<=exp(log.t4.1) & chemo=="chemo = 0" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t4.0*log(lambda.status1.t4.0) + gamma.status1.t4.0*log(time))]

ggplot(bhazs.long[!is.na(fit.chaz) & status=="status = 1"]) + geom_point(aes(x=log(time), y=log(value))) +
  geom_line(aes(log(time), y=log(fit.chaz)), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
        plot.title = element_text(size = 16, hjust = -0.15),
        strip.text = element_text(size=16), 
        strip.background = element_blank())+  
  ylab("log(chaz)") + ggtitle("Fitting four straight lines:")

#+END_SRC

#+RESULTS[(2022-07-15 13:28:37) 4b228251b290b5b37b17f794e6ff46d7f5a30b34]:
[[file:./figures/fig-log-hazards-log-time-hazard1-3changepoints.png]]


#+BEGIN_SRC R :results file graphics :file ./figures/fig-hazards-time-hazard1-3changepoints.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs.long[time<=exp(log.t1.1) & chemo=="chemo = 1" & status=="status = 1",    
           fit.chaz:=exp(gamma.status1.t1.1*log(lambda.status1.t1.1) + gamma.status1.t1.1*log(time))]
bhazs.long[time<=exp(log.t1.1) & chemo=="chemo = 0" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t1.0*log(lambda.status1.t1.0) + gamma.status1.t1.0*log(time))]
bhazs.long[time>=exp(log.t1.1) & time<=exp(log.t2.1) & chemo=="chemo = 1" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t2.1*log(lambda.status1.t2.1) + gamma.status1.t2.1*log(time))]
bhazs.long[time>=exp(log.t1.1) & time<=exp(log.t2.1) & chemo=="chemo = 0" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t2.0*log(lambda.status1.t2.0) + gamma.status1.t2.0*log(time))]
bhazs.long[time>=exp(log.t2.1) & time<=exp(log.t3.1) & chemo=="chemo = 1" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t3.1*log(lambda.status1.t3.1) + gamma.status1.t3.1*log(time))]
bhazs.long[time>=exp(log.t2.1) & time<=exp(log.t3.1) & chemo=="chemo = 0" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t3.0*log(lambda.status1.t3.0) + gamma.status1.t3.0*log(time))]
bhazs.long[time>=exp(log.t3.1) & time<=exp(log.t4.1) & chemo=="chemo = 1" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t4.1*log(lambda.status1.t4.1) + gamma.status1.t4.1*log(time))]
bhazs.long[time>=exp(log.t3.1) & time<=exp(log.t4.1) & chemo=="chemo = 0" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t4.0*log(lambda.status1.t4.0) + gamma.status1.t4.0*log(time))]
 
ggplot(bhazs.long[!is.na(fit.chaz) & status=="status = 1"]) +
  geom_point(aes(x=time, y=value)) +
  geom_line(aes(time, y=fit.chaz), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
        strip.text = element_text(size=16),
        plot.title = element_text(size = 16, hjust = -0.3),
        strip.background = element_blank())+
  ylab("chaz") + ggtitle("Resulting cumulative baseline hazards:") 
#+END_SRC

#+RESULTS[(2022-07-15 13:28:40) b8f0bc7774c9d92c1e636499f01a8b49ed9d903f]:
[[file:./figures/fig-hazards-time-hazard1-3changepoints.png]]


*** Cause two events (one changepoint)


#+BEGIN_SRC R :results file graphics :file ./figures/fig-log-hazards-log-time-hazard2-changepoint.png :exports none :session *R* :cache yes :width 500 :height 500
log.t0.2 <- 0     
log.t1.2 <- 1.5 
log.t2.2 <- 3  

kmin.2.t1.1 <- min((1:nrow(bhazs[chaz2>0 & chemo==1]))[log(bhazs[chaz2>0 & chemo==1][["time"]])>log.t0.2])
kmax.2.t1.1 <- max((1:nrow(bhazs[chaz2>0 & chemo==1]))[log(bhazs[chaz2>0 & chemo==1][["time"]])<log.t1.2])
kmin.2.t1.0 <- min((1:nrow(bhazs[chaz2>0 & chemo==0]))[log(bhazs[chaz2>0 & chemo==0][["time"]])>log.t0.2])
kmax.2.t1.0 <- max((1:nrow(bhazs[chaz2>0 & chemo==0]))[log(bhazs[chaz2>0 & chemo==0][["time"]])<log.t1.2])

kmin.2.t2.1 <- min((1:nrow(bhazs[chaz2>0 & chemo==1]))[log(bhazs[chaz2>0 & chemo==1][["time"]])>log.t1.2])
kmax.2.t2.1 <- max((1:nrow(bhazs[chaz2>0 & chemo==1]))[log(bhazs[chaz2>0 & chemo==1][["time"]])<log.t2.2])
kmin.2.t2.0 <- min((1:nrow(bhazs[chaz2>0 & chemo==0]))[log(bhazs[chaz2>0 & chemo==0][["time"]])>log.t1.2])
kmax.2.t2.0 <- max((1:nrow(bhazs[chaz2>0 & chemo==0]))[log(bhazs[chaz2>0 & chemo==0][["time"]])<log.t2.2])

#plot(log(bhazs[chaz2>0 & chemo==1][["time"]])[kmin.2.t1.1:kmax.2.t1.1],log(bhazs[chaz2>0 & chemo==1][["chaz2"]][kmin.2.t1.1:kmax.2.t1.1]))
fit.status2.t1.1 <- lm(log(chaz2)~log(time), data=bhazs[chaz2>0 & chemo==1][kmin.2.t1.1:kmax.2.t1.1])
#abline(a = coef(fit.status2.t1.1)[1], b = coef(fit.status2.t1.1)[2], col = "red")
(gamma.status2.t1.1 <- coef(fit.status2.t1.1)[2])
(lambda.status2.t1.1 <- exp(coef(fit.status2.t1.1)[1]/gamma.status2.t1.1))
#plot(log(bhazs[chaz2>0 & chemo==0][["time"]])[kmin.2.t1.0:kmax.2.t1.0],log(bhazs[chaz2>0 & chemo==0][["chaz2"]][kmin.2.t1.0:kmax.2.t1.0]))
fit.status2.t1.0 <- lm(log(chaz2)~log(time), data=bhazs[chaz2>0 & chemo==0][kmin.2.t1.0:kmax.2.t1.0])
#abline(a = coef(fit.status2.t1.0)[1], b = coef(fit.status2.t1.0)[2], col = "red")
(gamma.status2.t1.0 <- coef(fit.status2.t1.0)[2])
(lambda.status2.t1.0 <- exp(coef(fit.status2.t1.0)[1]/gamma.status2.t1.0))

# plot(log(bhazs[chaz2>0 & chemo==1][["time"]])[kmin.2.t2.1:kmax.2.t2.1],log(bhazs[chaz2>0 & chemo==1][["chaz2"]][kmin.2.t2.1:kmax.2.t2.1]))
fit.status2.t2.1 <- lm(log(chaz2)~log(time), data=bhazs[chaz2>0 & chemo==1][kmin.2.t2.1:kmax.2.t2.1])
#abline(a = coef(fit.status2.t2.1)[1], b = coef(fit.status2.t2.1)[2], col = "red")
(gamma.status2.t2.1 <- coef(fit.status2.t2.1)[2])
(lambda.status2.t2.1 <- exp(coef(fit.status2.t2.1)[1]/gamma.status2.t2.1))
#plot(log(bhazs[chaz2>0 & chemo==0][["time"]])[kmin.2.t2.0:kmax.2.t2.0],log(bhazs[chaz2>0 & chemo==0][["chaz2"]][kmin.2.t2.0:kmax.2.t2.0]))
fit.status2.t2.0 <- lm(log(chaz2)~log(time), data=bhazs[chaz2>0 & chemo==0][kmin.2.t2.0:kmax.2.t2.0])
#abline(a = coef(fit.status2.t2.0)[1], b = coef(fit.status2.t2.0)[2], col = "red")
(gamma.status2.t2.0 <- coef(fit.status2.t2.0)[2])
(lambda.status2.t2.0 <- exp(coef(fit.status2.t2.0)[1]/gamma.status2.t2.0))

bhazs.long[time>=exp(log.t0.2) & time<=exp(log.t1.2) & chemo=="chemo = 1" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t1.1*log(lambda.status2.t1.1) + gamma.status2.t1.1*log(time))]
bhazs.long[time>=exp(log.t0.2) & time<=exp(log.t1.2) & chemo=="chemo = 0" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t1.0*log(lambda.status2.t1.0) + gamma.status2.t1.0*log(time))]
bhazs.long[time>=exp(log.t1.2) & time<=exp(log.t2.2) & chemo=="chemo = 1" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t2.1*log(lambda.status2.t2.1) + gamma.status2.t2.1*log(time))]
bhazs.long[time>=exp(log.t1.2) & time<=exp(log.t2.2) & chemo=="chemo = 0" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t2.0*log(lambda.status2.t2.0) + gamma.status2.t2.0*log(time))]

ggplot(bhazs.long[!is.na(fit.chaz) & status=="status = 2"]) + geom_point(aes(x=log(time), y=log(value))) +
  geom_line(aes(log(time), y=log(fit.chaz)), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18), legend.position="none",
        strip.text = element_text(size=16),
        plot.title = element_text(size = 16, hjust = -0.15),
        strip.background = element_blank())+
  ylab("log(chaz)") + ggtitle("Fitting two straight lines:")
#+END_SRC

#+RESULTS[(2022-07-15 13:28:43) f22fdfb272aab395cfe6d04021efe341980513bf]:
[[file:./figures/fig-log-hazards-log-time-hazard2-changepoint.png]]



#+BEGIN_SRC R :results file graphics :file ./figures/fig-hazards-time-hazard2-changepoint.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs.long[time<=exp(log.t1.2) & chemo=="chemo = 1" & status=="status = 2",  
           fit.chaz:=exp(gamma.status2.t1.1*log(lambda.status2.t1.1) + gamma.status2.t1.1*log(time))]
bhazs.long[time<=exp(log.t1.2) & chemo=="chemo = 0" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t1.0*log(lambda.status2.t1.0) + gamma.status2.t1.0*log(time))]
bhazs.long[time>=exp(log.t1.2) & chemo=="chemo = 1" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t2.1*log(lambda.status2.t2.1) + gamma.status2.t2.1*log(time))]
bhazs.long[time>=exp(log.t1.2) & chemo=="chemo = 0" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t2.0*log(lambda.status2.t2.0) + gamma.status2.t2.0*log(time))]
  
ggplot(bhazs.long[!is.na(fit.chaz) & status=="status = 2"]) +  
  geom_point(aes(x=time, y=value)) +
  geom_line(aes(time, y=fit.chaz), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
        strip.text = element_text(size=16),
        plot.title = element_text(size = 16, hjust = -0.3),
        strip.background = element_blank())+
  ylab("chaz") + ggtitle("Resulting cumulative baseline hazards:")
#+END_SRC

#+RESULTS[(2022-07-15 13:28:46) 1f76388bdbd8828f51a689c07c9d35df447436cf]:
[[file:./figures/fig-hazards-time-hazard2-changepoint.png]]

*** Cause two events (add changepoint)


#+BEGIN_SRC R :results file graphics :file ./figures/fig-log-hazards-log-time-hazard2-2changepoints.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs <- bhaz.cox[[1]]  
 
bhazs[, chaz1 := cumsum(dhaz1*exp1), by = "chemo"]
bhazs[, chaz2 := cumsum(dhaz2*exp2), by = "chemo"]
bhazs[, chaz0 := cumsum(dhaz0*exp0), by = "chemo"]
 
bhazs.long <- melt(bhazs, id.vars=c("chemo", "time")) 
bhazs.long[, variable2:=substr(variable,1,4)] 
bhazs.long <- bhazs.long[variable2=="chaz"][, status:=paste0("status = ", gsub("chaz", "", variable))]
bhazs.long[, chemo:=paste0("chemo = ", chemo)]

log.t0.2 <- 0 
log.t1.2 <- 1.5 
log.t2.2 <- 3
log.t3.2 <- 3.6  

kmin.2.t1.1 <- min((1:nrow(bhazs[chaz2>0 & chemo==1]))[log(bhazs[chaz2>0 & chemo==1][["time"]])>log.t0.2])
kmax.2.t1.1 <- max((1:nrow(bhazs[chaz2>0 & chemo==1]))[log(bhazs[chaz2>0 & chemo==1][["time"]])<log.t1.2])
kmin.2.t1.0 <- min((1:nrow(bhazs[chaz2>0 & chemo==0]))[log(bhazs[chaz2>0 & chemo==0][["time"]])>log.t0.2])
kmax.2.t1.0 <- max((1:nrow(bhazs[chaz2>0 & chemo==0]))[log(bhazs[chaz2>0 & chemo==0][["time"]])<log.t1.2])

kmin.2.t2.1 <- min((1:nrow(bhazs[chaz2>0 & chemo==1]))[log(bhazs[chaz2>0 & chemo==1][["time"]])>log.t1.2])
kmax.2.t2.1 <- max((1:nrow(bhazs[chaz2>0 & chemo==1]))[log(bhazs[chaz2>0 & chemo==1][["time"]])<log.t2.2])
kmin.2.t2.0 <- min((1:nrow(bhazs[chaz2>0 & chemo==0]))[log(bhazs[chaz2>0 & chemo==0][["time"]])>log.t1.2])
kmax.2.t2.0 <- max((1:nrow(bhazs[chaz2>0 & chemo==0]))[log(bhazs[chaz2>0 & chemo==0][["time"]])<log.t2.2])

kmin.2.t3.1 <- min((1:nrow(bhazs[chaz2>0 & chemo==1]))[log(bhazs[chaz2>0 & chemo==1][["time"]])>log.t2.2])
kmax.2.t3.1 <- max((1:nrow(bhazs[chaz2>0 & chemo==1]))[log(bhazs[chaz2>0 & chemo==1][["time"]])<log.t3.2])
kmin.2.t3.0 <- min((1:nrow(bhazs[chaz2>0 & chemo==0]))[log(bhazs[chaz2>0 & chemo==0][["time"]])>log.t2.2])
kmax.2.t3.0 <- max((1:nrow(bhazs[chaz2>0 & chemo==0]))[log(bhazs[chaz2>0 & chemo==0][["time"]])<log.t3.2])

#plot(log(bhazs[chaz2>0 & chemo==1][["time"]])[kmin.2.t1.1:kmax.2.t1.1],log(bhazs[chaz2>0 & chemo==1][["chaz2"]][kmin.2.t1.1:kmax.2.t1.1]))
fit.status2.t1.1 <- lm(log(chaz2)~log(time), data=bhazs[chaz2>0 & chemo==1][kmin.2.t1.1:kmax.2.t1.1])
#abline(a = coef(fit.status2.t1.1)[1], b = coef(fit.status2.t1.1)[2], col = "red")
(gamma.status2.t1.1 <- coef(fit.status2.t1.1)[2])
(lambda.status2.t1.1 <- exp(coef(fit.status2.t1.1)[1]/gamma.status2.t1.1))
#plot(log(bhazs[chaz2>0 & chemo==0][["time"]])[kmin.2.t1.0:kmax.2.t1.0],log(bhazs[chaz2>0 & chemo==0][["chaz2"]][kmin.2.t1.0:kmax.2.t1.0]))
fit.status2.t1.0 <- lm(log(chaz2)~log(time), data=bhazs[chaz2>0 & chemo==0][kmin.2.t1.0:kmax.2.t1.0])
#abline(a = coef(fit.status2.t1.0)[1], b = coef(fit.status2.t1.0)[2], col = "red")
(gamma.status2.t1.0 <- coef(fit.status2.t1.0)[2])
(lambda.status2.t1.0 <- exp(coef(fit.status2.t1.0)[1]/gamma.status2.t1.0))

# plot(log(bhazs[chaz2>0 & chemo==1][["time"]])[kmin.2.t2.1:kmax.2.t2.1],log(bhazs[chaz2>0 & chemo==1][["chaz2"]][kmin.2.t2.1:kmax.2.t2.1]))
fit.status2.t2.1 <- lm(log(chaz2)~log(time), data=bhazs[chaz2>0 & chemo==1][kmin.2.t2.1:kmax.2.t2.1])
#abline(a = coef(fit.status2.t2.1)[1], b = coef(fit.status2.t2.1)[2], col = "red")
(gamma.status2.t2.1 <- coef(fit.status2.t2.1)[2])
(lambda.status2.t2.1 <- exp(coef(fit.status2.t2.1)[1]/gamma.status2.t2.1))
#plot(log(bhazs[chaz2>0 & chemo==0][["time"]])[kmin.2.t2.0:kmax.2.t2.0],log(bhazs[chaz2>0 & chemo==0][["chaz2"]][kmin.2.t2.0:kmax.2.t2.0]))
fit.status2.t2.0 <- lm(log(chaz2)~log(time), data=bhazs[chaz2>0 & chemo==0][kmin.2.t2.0:kmax.2.t2.0])
#abline(a = coef(fit.status2.t2.0)[1], b = coef(fit.status2.t2.0)[2], col = "red")
(gamma.status2.t2.0 <- coef(fit.status2.t2.0)[2])
(lambda.status2.t2.0 <- exp(coef(fit.status2.t2.0)[1]/gamma.status2.t2.0))

# plot(log(bhazs[chaz2>0 & chemo==1][["time"]])[kmin.2.t3.1:kmax.2.t3.1],log(bhazs[chaz2>0 & chemo==1][["chaz2"]][kmin.2.t3.1:kmax.2.t3.1]))
fit.status2.t3.1 <- lm(log(chaz2)~log(time), data=bhazs[chaz2>0 & chemo==1][kmin.2.t3.1:kmax.2.t3.1])
#abline(a = coef(fit.status2.t3.1)[1], b = coef(fit.status2.t3.1)[2], col = "red")
(gamma.status2.t3.1 <- coef(fit.status2.t3.1)[2])
(lambda.status2.t3.1 <- exp(coef(fit.status2.t3.1)[1]/gamma.status2.t3.1))
#plot(log(bhazs[chaz2>0 & chemo==0][["time"]])[kmin.2.t3.0:kmax.2.t3.0],log(bhazs[chaz2>0 & chemo==0][["chaz2"]][kmin.2.t3.0:kmax.2.t3.0]))
fit.status2.t3.0 <- lm(log(chaz2)~log(time), data=bhazs[chaz2>0 & chemo==0][kmin.2.t3.0:kmax.2.t3.0])
#abline(a = coef(fit.status2.t3.0)[1], b = coef(fit.status2.t3.0)[2], col = "red")
(gamma.status2.t3.0 <- coef(fit.status2.t3.0)[2])
(lambda.status2.t3.0 <- exp(coef(fit.status2.t3.0)[1]/gamma.status2.t3.0))

bhazs.long[time>=exp(log.t0.2) & time<=exp(log.t1.2) & chemo=="chemo = 1" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t1.1*log(lambda.status2.t1.1) + gamma.status2.t1.1*log(time))]
bhazs.long[time>=exp(log.t0.2) & time<=exp(log.t1.2) & chemo=="chemo = 0" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t1.0*log(lambda.status2.t1.0) + gamma.status2.t1.0*log(time))]
bhazs.long[time>=exp(log.t1.2) & time<=exp(log.t2.2) & chemo=="chemo = 1" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t2.1*log(lambda.status2.t2.1) + gamma.status2.t2.1*log(time))]
bhazs.long[time>=exp(log.t1.2) & time<=exp(log.t2.2) & chemo=="chemo = 0" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t2.0*log(lambda.status2.t2.0) + gamma.status2.t2.0*log(time))]
bhazs.long[time>=exp(log.t2.2) & time<=exp(log.t3.2) & chemo=="chemo = 1" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t3.1*log(lambda.status2.t3.1) + gamma.status2.t3.1*log(time))]
bhazs.long[time>=exp(log.t2.2) & time<=exp(log.t3.2) & chemo=="chemo = 0" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t3.0*log(lambda.status2.t3.0) + gamma.status2.t3.0*log(time))]

ggplot(bhazs.long[!is.na(fit.chaz) & status=="status = 2"]) + geom_point(aes(x=log(time), y=log(value))) +
  geom_line(aes(log(time), y=log(fit.chaz)), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18), legend.position="none",
        strip.text = element_text(size=16),
        plot.title = element_text(size = 16, hjust = -0.15),
        strip.background = element_blank())+
  ylab("log(chaz)") + ggtitle("Fitting three straight lines:")
#+END_SRC

#+RESULTS[(2022-07-15 13:28:48) 3428ab08df0eec1f7eee9d2e7eb322615a5f687c]:
[[file:./figures/fig-log-hazards-log-time-hazard2-2changepoints.png]]



#+BEGIN_SRC R :results file graphics :file ./figures/fig-hazards-time-hazard2-2changepoints.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs.long[time<=exp(log.t1.2) & chemo=="chemo = 1" & status=="status = 2",  
           fit.chaz:=exp(gamma.status2.t1.1*log(lambda.status2.t1.1) + gamma.status2.t1.1*log(time))]
bhazs.long[time<=exp(log.t1.2) & chemo=="chemo = 0" & status=="status = 2", 
           fit.chaz:=exp(gamma.status2.t1.0*log(lambda.status2.t1.0) + gamma.status2.t1.0*log(time))]
bhazs.long[time>=exp(log.t1.2) & time<=exp(log.t2.2) & chemo=="chemo = 1" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t2.1*log(lambda.status2.t2.1) + gamma.status2.t2.1*log(time))]
bhazs.long[time>=exp(log.t1.2) & time<=exp(log.t2.2) & chemo=="chemo = 0" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t2.0*log(lambda.status2.t2.0) + gamma.status2.t2.0*log(time))]
bhazs.long[time>=exp(log.t2.2) & chemo=="chemo = 1" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t3.1*log(lambda.status2.t3.1) + gamma.status2.t3.1*log(time))]
bhazs.long[time>=exp(log.t2.2) & chemo=="chemo = 0" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t3.0*log(lambda.status2.t3.0) + gamma.status2.t3.0*log(time))]
 
ggplot(bhazs.long[!is.na(fit.chaz) & status=="status = 2"]) +  
  geom_point(aes(x=time, y=value)) +
  geom_line(aes(time, y=fit.chaz), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
        strip.text = element_text(size=16),
        plot.title = element_text(size = 16, hjust = -0.3),
        strip.background = element_blank())+
  ylab("chaz") + ggtitle("Resulting cumulative baseline hazards:")
#+END_SRC

#+RESULTS[(2022-07-15 13:28:50) dce4afa5574c28b0d7e8548a397ab675d8a87643]:
[[file:./figures/fig-hazards-time-hazard2-2changepoints.png]]


*** Censoring events (covariate dependent)

#+BEGIN_SRC R :results file graphics :file ./figures/fig-log-hazards-log-time-hazard0-changepoint.png :exports none :session *R* :cache yes :width 500 :height 500
log.t0.0 <- 1.2  
log.t1.0 <- 1.9    
log.t2.0 <- 3.2 

kmin.0.t1.1 <- min((1:nrow(bhazs[chaz0>0 & chemo==1]))[log(bhazs[chaz0>0 & chemo==1][["time"]])>log.t0.0])
kmax.0.t1.1 <- max((1:nrow(bhazs[chaz0>0 & chemo==1]))[log(bhazs[chaz0>0 & chemo==1][["time"]])<log.t1.0])
kmin.0.t1.0 <- min((1:nrow(bhazs[chaz0>0 & chemo==0]))[log(bhazs[chaz0>0 & chemo==0][["time"]])>log.t0.0])
kmax.0.t1.0 <- max((1:nrow(bhazs[chaz0>0 & chemo==0]))[log(bhazs[chaz0>0 & chemo==0][["time"]])<log.t1.0])

kmin.0.t2.1 <- min((1:nrow(bhazs[chaz0>0 & chemo==1]))[log(bhazs[chaz0>0 & chemo==1][["time"]])>log.t1.0])
kmax.0.t2.1 <- max((1:nrow(bhazs[chaz0>0 & chemo==1]))[log(bhazs[chaz0>0 & chemo==1][["time"]])<log.t2.0])
kmin.0.t2.0 <- min((1:nrow(bhazs[chaz0>0 & chemo==0]))[log(bhazs[chaz0>0 & chemo==0][["time"]])>log.t1.0])
kmax.0.t2.0 <- max((1:nrow(bhazs[chaz0>0 & chemo==0]))[log(bhazs[chaz0>0 & chemo==0][["time"]])<log.t2.0])

#plot(log(bhazs[chaz0>0 & chemo==1][["time"]])[kmin.0.t1.1:kmax.0.t1.1],log(bhazs[chaz0>0 & chemo==1][["chaz0"]][kmin.0.t1.1:kmax.0.t1.1]))
fit.status0.t1.1 <- lm(log(chaz0)~log(time), data=bhazs[chaz0>0 & chemo==1][kmin.0.t1.1:kmax.0.t1.1])
#abline(a = coef(fit.status0.t1.1)[1], b = coef(fit.status0.t1.1)[2], col = "red")
(gamma.status0.t1.1 <- coef(fit.status0.t1.1)[2])
(lambda.status0.t1.1 <- exp(coef(fit.status0.t1.1)[1]/gamma.status0.t1.1))
#plot(log(bhazs[chaz0>0 & chemo==0][["time"]])[kmin.0.t1.0:kmax.0.t1.0],log(bhazs[chaz0>0 & chemo==0][["chaz0"]][kmin.0.t1.0:kmax.0.t1.0]))
fit.status0.t1.0 <- lm(log(chaz0)~log(time), data=bhazs[chaz0>0 & chemo==0][kmin.0.t1.0:kmax.0.t1.0])
#abline(a = coef(fit.status0.t1.0)[1], b = coef(fit.status0.t1.0)[2], col = "red")
(gamma.status0.t1.0 <- coef(fit.status0.t1.0)[2])
(lambda.status0.t1.0 <- exp(coef(fit.status0.t1.0)[1]/gamma.status0.t1.0))

# plot(log(bhazs[chaz0>0 & chemo==1][["time"]])[kmin.0.t2.1:kmax.0.t2.1],log(bhazs[chaz0>0 & chemo==1][["chaz0"]][kmin.0.t2.1:kmax.0.t2.1]))
fit.status0.t2.1 <- lm(log(chaz0)~log(time), data=bhazs[chaz0>0 & chemo==1][kmin.0.t2.1:kmax.0.t2.1])
#abline(a = coef(fit.status0.t2.1)[1], b = coef(fit.status0.t2.1)[2], col = "red")
(gamma.status0.t2.1 <- coef(fit.status0.t2.1)[2])
(lambda.status0.t2.1 <- exp(coef(fit.status0.t2.1)[1]/gamma.status0.t2.1))
#plot(log(bhazs[chaz0>0 & chemo==0][["time"]])[kmin.0.t2.0:kmax.0.t2.0],log(bhazs[chaz0>0 & chemo==0][["chaz0"]][kmin.0.t2.0:kmax.0.t2.0]))
fit.status0.t2.0 <- lm(log(chaz0)~log(time), data=bhazs[chaz0>0 & chemo==0][kmin.0.t2.0:kmax.0.t2.0])
#abline(a = coef(fit.status0.t2.0)[1], b = coef(fit.status0.t2.0)[2], col = "red")
(gamma.status0.t2.0 <- coef(fit.status0.t2.0)[2])
(lambda.status0.t2.0 <- exp(coef(fit.status0.t2.0)[1]/gamma.status0.t2.0))

bhazs.long[time>=exp(log.t0.0) & time<=exp(log.t1.0) & chemo=="chemo = 1" & status=="status = 0",
           fit.chaz:=exp(gamma.status0.t1.1*log(lambda.status0.t1.1) + gamma.status0.t1.1*log(time))]
bhazs.long[time>=exp(log.t0.0) & time<=exp(log.t1.0) & chemo=="chemo = 0" & status=="status = 0",
           fit.chaz:=exp(gamma.status0.t1.0*log(lambda.status0.t1.0) + gamma.status0.t1.0*log(time))]
bhazs.long[time>=exp(log.t1.0) & time<=exp(log.t2.0) & chemo=="chemo = 1" & status=="status = 0",
           fit.chaz:=exp(gamma.status0.t2.1*log(lambda.status0.t2.1) + gamma.status0.t2.1*log(time))]
bhazs.long[time>=exp(log.t1.0) & time<=exp(log.t2.0) & chemo=="chemo = 0" & status=="status = 0",
           fit.chaz:=exp(gamma.status0.t2.0*log(lambda.status0.t2.0) + gamma.status0.t2.0*log(time))]

ggplot(bhazs.long[!is.na(fit.chaz) & status=="status = 0"]) + geom_point(aes(x=log(time), y=log(value))) +
  geom_line(aes(log(time), y=log(fit.chaz)), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18), legend.position="none",
        strip.text = element_text(size=16),
        plot.title = element_text(size = 16, hjust = -0.15),
        strip.background = element_blank())+ 
  ylab("log(chaz)") + ggtitle("Fitting two straight lines:")
#+END_SRC

#+RESULTS[(2022-07-15 13:28:54) 020223b9c7ed0e81b03108b3780b755025e561d2]:
[[file:./figures/fig-log-hazards-log-time-hazard0-changepoint.png]]



#+BEGIN_SRC R :results file graphics :file ./figures/fig-hazards-time-hazard0-changepoint.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs.long[time<=exp(log.t1.0) & chemo=="chemo = 1" & status=="status = 0",    
           fit.chaz:=exp(gamma.status0.t1.1*log(lambda.status0.t1.1) + gamma.status0.t1.1*log(time))]
bhazs.long[time<=exp(log.t1.0) & chemo=="chemo = 0" & status=="status = 0",
           fit.chaz:=exp(gamma.status0.t1.0*log(lambda.status0.t1.0) + gamma.status0.t1.0*log(time))]
bhazs.long[time>=exp(log.t1.0) & chemo=="chemo = 1" & status=="status = 0",
           fit.chaz:=exp(gamma.status0.t2.1*log(lambda.status0.t2.1) + gamma.status0.t2.1*log(time))]
bhazs.long[time>=exp(log.t1.0) & chemo=="chemo = 0" & status=="status = 0",
           fit.chaz:=exp(gamma.status0.t2.0*log(lambda.status0.t2.0) + gamma.status0.t2.0*log(time))]
 
ggplot(bhazs.long[!is.na(fit.chaz) & status=="status = 0"]) + 
  geom_point(aes(x=time, y=value)) +
  geom_line(aes(time, y=fit.chaz), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
        strip.text = element_text(size=16),
        plot.title = element_text(size = 16, hjust = -0.3), 
        strip.background = element_blank())+
  ylab("chaz") + ggtitle("Resulting cumulative baseline hazards:")
#+END_SRC

#+RESULTS[(2022-07-15 13:28:56) 1d072583db945efdef19f75db175f541e119cc5f]:
[[file:./figures/fig-hazards-time-hazard0-changepoint.png]]


*** Censoring events (covariate dependent, add changepoint)


#+BEGIN_SRC R :results file graphics :file ./figures/fig-log-hazards-log-time-hazard0-2changepoints.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs <- bhaz.cox[[1]] 
  
bhazs[, chaz1 := cumsum(dhaz1*exp1), by = "chemo"]
bhazs[, chaz2 := cumsum(dhaz2*exp2), by = "chemo"]
bhazs[, chaz0 := cumsum(dhaz0*exp0), by = "chemo"]

bhazs.long <- melt(bhazs, id.vars=c("chemo", "time")) 
bhazs.long[, variable2:=substr(variable,1,4)] 
bhazs.long <- bhazs.long[variable2=="chaz"][, status:=paste0("status = ", gsub("chaz", "", variable))]
bhazs.long[, chemo:=paste0("chemo = ", chemo)]

log.t0.0 <- 1.2
log.t1.0 <- 1.9   
log.t2.0 <- 3.2
log.t3.0 <- 3.5

kmin.0.t1.1 <- min((1:nrow(bhazs[chaz0>0 & chemo==1]))[log(bhazs[chaz0>0 & chemo==1][["time"]])>log.t0.0])
kmax.0.t1.1 <- max((1:nrow(bhazs[chaz0>0 & chemo==1]))[log(bhazs[chaz0>0 & chemo==1][["time"]])<log.t1.0])
kmin.0.t1.0 <- min((1:nrow(bhazs[chaz0>0 & chemo==0]))[log(bhazs[chaz0>0 & chemo==0][["time"]])>log.t0.0])
kmax.0.t1.0 <- max((1:nrow(bhazs[chaz0>0 & chemo==0]))[log(bhazs[chaz0>0 & chemo==0][["time"]])<log.t1.0])

kmin.0.t2.1 <- min((1:nrow(bhazs[chaz0>0 & chemo==1]))[log(bhazs[chaz0>0 & chemo==1][["time"]])>log.t1.0])
kmax.0.t2.1 <- max((1:nrow(bhazs[chaz0>0 & chemo==1]))[log(bhazs[chaz0>0 & chemo==1][["time"]])<log.t2.0])
kmin.0.t2.0 <- min((1:nrow(bhazs[chaz0>0 & chemo==0]))[log(bhazs[chaz0>0 & chemo==0][["time"]])>log.t1.0])
kmax.0.t2.0 <- max((1:nrow(bhazs[chaz0>0 & chemo==0]))[log(bhazs[chaz0>0 & chemo==0][["time"]])<log.t2.0])

kmin.0.t3.1 <- min((1:nrow(bhazs[chaz0>0 & chemo==1]))[log(bhazs[chaz0>0 & chemo==1][["time"]])>log.t2.0])
kmax.0.t3.1 <- max((1:nrow(bhazs[chaz0>0 & chemo==1]))[log(bhazs[chaz0>0 & chemo==1][["time"]])<log.t3.0])
kmin.0.t3.0 <- min((1:nrow(bhazs[chaz0>0 & chemo==0]))[log(bhazs[chaz0>0 & chemo==0][["time"]])>log.t2.0])
kmax.0.t3.0 <- max((1:nrow(bhazs[chaz0>0 & chemo==0]))[log(bhazs[chaz0>0 & chemo==0][["time"]])<log.t3.0])

#plot(log(bhazs[chaz0>0 & chemo==1][["time"]])[kmin.0.t1.1:kmax.0.t1.1],log(bhazs[chaz0>0 & chemo==1][["chaz0"]][kmin.0.t1.1:kmax.0.t1.1]))
fit.status0.t1.1 <- lm(log(chaz0)~log(time), data=bhazs[chaz0>0 & chemo==1][kmin.0.t1.1:kmax.0.t1.1])
#abline(a = coef(fit.status0.t1.1)[1], b = coef(fit.status0.t1.1)[2], col = "red")
(gamma.status0.t1.1 <- coef(fit.status0.t1.1)[2])
(lambda.status0.t1.1 <- exp(coef(fit.status0.t1.1)[1]/gamma.status0.t1.1))
#plot(log(bhazs[chaz0>0 & chemo==0][["time"]])[kmin.0.t1.0:kmax.0.t1.0],log(bhazs[chaz0>0 & chemo==0][["chaz0"]][kmin.0.t1.0:kmax.0.t1.0]))
fit.status0.t1.0 <- lm(log(chaz0)~log(time), data=bhazs[chaz0>0 & chemo==0][kmin.0.t1.0:kmax.0.t1.0])
#abline(a = coef(fit.status0.t1.0)[1], b = coef(fit.status0.t1.0)[2], col = "red")
(gamma.status0.t1.0 <- coef(fit.status0.t1.0)[2])
(lambda.status0.t1.0 <- exp(coef(fit.status0.t1.0)[1]/gamma.status0.t1.0))

# plot(log(bhazs[chaz0>0 & chemo==1][["time"]])[kmin.0.t2.1:kmax.0.t2.1],log(bhazs[chaz0>0 & chemo==1][["chaz0"]][kmin.0.t2.1:kmax.0.t2.1]))
fit.status0.t2.1 <- lm(log(chaz0)~log(time), data=bhazs[chaz0>0 & chemo==1][kmin.0.t2.1:kmax.0.t2.1])
#abline(a = coef(fit.status0.t2.1)[1], b = coef(fit.status0.t2.1)[2], col = "red")
(gamma.status0.t2.1 <- coef(fit.status0.t2.1)[2])
(lambda.status0.t2.1 <- exp(coef(fit.status0.t2.1)[1]/gamma.status0.t2.1))
#plot(log(bhazs[chaz0>0 & chemo==0][["time"]])[kmin.0.t2.0:kmax.0.t2.0],log(bhazs[chaz0>0 & chemo==0][["chaz0"]][kmin.0.t2.0:kmax.0.t2.0]))
fit.status0.t2.0 <- lm(log(chaz0)~log(time), data=bhazs[chaz0>0 & chemo==0][kmin.0.t2.0:kmax.0.t2.0])
#abline(a = coef(fit.status0.t2.0)[1], b = coef(fit.status0.t2.0)[2], col = "red")
(gamma.status0.t2.0 <- coef(fit.status0.t2.0)[2])
(lambda.status0.t2.0 <- exp(coef(fit.status0.t2.0)[1]/gamma.status0.t2.0))

# plot(log(bhazs[chaz0>0 & chemo==1][["time"]])[kmin.0.t3.1:kmax.0.t3.1],log(bhazs[chaz0>0 & chemo==1][["chaz0"]][kmin.0.t3.1:kmax.0.t3.1]))
fit.status0.t3.1 <- lm(log(chaz0)~log(time), data=bhazs[chaz0>0 & chemo==1][kmin.0.t3.1:kmax.0.t3.1])
#abline(a = coef(fit.status0.t3.1)[1], b = coef(fit.status0.t3.1)[2], col = "red")
(gamma.status0.t3.1 <- coef(fit.status0.t3.1)[2])
(lambda.status0.t3.1 <- exp(coef(fit.status0.t3.1)[1]/gamma.status0.t3.1))
#plot(log(bhazs[chaz0>0 & chemo==0][["time"]])[kmin.0.t3.0:kmax.0.t3.0],log(bhazs[chaz0>0 & chemo==0][["chaz0"]][kmin.0.t3.0:kmax.0.t3.0]))
fit.status0.t3.0 <- lm(log(chaz0)~log(time), data=bhazs[chaz0>0 & chemo==0][kmin.0.t3.0:kmax.0.t3.0])
#abline(a = coef(fit.status0.t3.0)[1], b = coef(fit.status0.t3.0)[2], col = "red")
(gamma.status0.t3.0 <- coef(fit.status0.t3.0)[2])
(lambda.status0.t3.0 <- exp(coef(fit.status0.t3.0)[1]/gamma.status0.t3.0))


bhazs.long[time>=exp(log.t0.0) & time<=exp(log.t1.0) & chemo=="chemo = 1" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.t1.1*log(lambda.status0.t1.1) + gamma.status0.t1.1*log(time))]
bhazs.long[time>=exp(log.t0.0) & time<=exp(log.t1.0) & chemo=="chemo = 0" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.t1.0*log(lambda.status0.t1.0) + gamma.status0.t1.0*log(time))]
bhazs.long[time>=exp(log.t1.0) & time<=exp(log.t2.0) & chemo=="chemo = 1" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.t2.1*log(lambda.status0.t2.1) + gamma.status0.t2.1*log(time))]
bhazs.long[time>=exp(log.t1.0) & time<=exp(log.t2.0) & chemo=="chemo = 0" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.t2.0*log(lambda.status0.t2.0) + gamma.status0.t2.0*log(time))]
bhazs.long[time>=exp(log.t2.0) & time<=exp(log.t3.0) & chemo=="chemo = 1" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.t3.1*log(lambda.status0.t3.1) + gamma.status0.t3.1*log(time))]
bhazs.long[time>=exp(log.t2.0) & time<=exp(log.t3.0) & chemo=="chemo = 0" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.t3.0*log(lambda.status0.t3.0) + gamma.status0.t3.0*log(time))]

ggplot(bhazs.long[!is.na(fit.chaz) & status=="status = 0"]) + geom_point(aes(x=log(time), y=log(value))) +
  geom_line(aes(log(time), y=log(fit.chaz)), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18), legend.position="none",
        strip.text = element_text(size=16),
        plot.title = element_text(size = 16, hjust = -0.15), 
        strip.background = element_blank())+ 
  ylab("log(chaz)") + ggtitle("Fitting three straight lines:")
#+END_SRC

#+RESULTS[(2022-07-15 13:28:59) b7263a3367a28be668b53f2f3ca8f1aca37b1970]:
[[file:./figures/fig-log-hazards-log-time-hazard0-2changepoints.png]]


#+BEGIN_SRC R :results file graphics :file ./figures/fig-hazards-time-hazard0-2changepoints.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs.long[time<=exp(log.t1.0) & chemo=="chemo = 1" & status=="status = 0",    
                              fit.chaz:=exp(gamma.status0.t1.1*log(lambda.status0.t1.1) + gamma.status0.t1.1*log(time))]
bhazs.long[time<=exp(log.t1.0) & chemo=="chemo = 0" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.t1.0*log(lambda.status0.t1.0) + gamma.status0.t1.0*log(time))]
bhazs.long[time>=exp(log.t1.0) & time <= exp(log.t2.0) & chemo=="chemo = 1" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.t2.1*log(lambda.status0.t2.1) + gamma.status0.t2.1*log(time))]
bhazs.long[time>=exp(log.t1.0) & time <= exp(log.t2.0) & chemo=="chemo = 0" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.t2.0*log(lambda.status0.t2.0) + gamma.status0.t2.0*log(time))]
bhazs.long[time>=exp(log.t2.0) & chemo=="chemo = 1" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.t3.1*log(lambda.status0.t3.1) + gamma.status0.t3.1*log(time))]
bhazs.long[time>=exp(log.t2.0) & chemo=="chemo = 0" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.t3.0*log(lambda.status0.t3.0) + gamma.status0.t3.0*log(time))]
 
ggplot(bhazs.long[!is.na(fit.chaz) & status=="status = 0"]) + 
  geom_point(aes(x=time, y=value)) + 
  geom_line(aes(time, y=fit.chaz), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
        strip.text = element_text(size=16), 
        plot.title = element_text(size = 16, hjust = -0.1), 
        strip.background = element_blank())+
  ylab("chaz") + ggtitle("Resulting cumulative baseline hazards:")
#+END_SRC

#+RESULTS[(2022-07-15 13:29:02) 01b3c8a885db7050df8cafec0cbbc2657b8b0ec6]:
[[file:./figures/fig-hazards-time-hazard0-2changepoints.png]]



*** Censoring events (independent)

#+BEGIN_SRC R :results file graphics :file ./figures/fig-log-hazards-log-time-hazard0-independent.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs.uninformative.cens <- bhaz.uninformative.cens[[1]]   
bhazs.uninformative.cens[, chaz0 := cumsum(dhaz0*exp0), by = "chemo"] 
 
bhazs.uninformative.cens.long <- melt(bhazs.uninformative.cens, id.vars=c("chemo", "time")) 
bhazs.uninformative.cens.long[, variable2:=substr(variable,1,4)] 
bhazs.uninformative.cens.long <- bhazs.uninformative.cens.long[variable2=="chaz"][, status:=paste0("status = ", gsub("chaz", "", variable))]
bhazs.uninformative.cens.long[, chemo:=paste0("chemo = ", chemo)]

if (FALSE) {

  dev.off()

  grid.arrange(ggplot(bhazs.uninformative.cens.long[status=="status = 0"]) + geom_point(aes(x=log(time), y=log(value))) +
               facet_grid(chemo~status, scales="free")+theme_bw()+
               theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
                     strip.text = element_text(size=16), 
                     plot.title = element_text(size = 16, hjust = 0.9),  
                     strip.background = element_blank())+ 
               ylab("log(chaz)") + ggtitle("Log cumulative hazards as functions of log observed event times:"),
               ggplot(bhazs.long[status=="status = 0"]) + geom_point(aes(x=log(time), y=log(value))) +
               facet_grid(chemo~status, scales="free")+theme_bw()+
               theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
                     strip.text = element_text(size=16), 
                     plot.title = element_text(size = 16, hjust = 0.9),  
                     strip.background = element_blank())+ 
               ylab("log(chaz)") + ggtitle("Log cumulative hazards as functions of log observed event times:"),
               nrow=1)

}

log.t0.0 <- 1
log.t1.0 <- 3  

kmin.0.1 <- min((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==1]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["time"]])>log.t0.0])
kmax.0.1 <- max((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==1]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["time"]])<log.t1.0])
kmin.0.0 <- min((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==0]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["time"]])>log.t0.0])
kmax.0.0 <- max((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==0]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["time"]])<log.t1.0])

#plot(log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["time"]])[kmin.0.1:kmax.0.1],log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["chaz0"]][kmin.0.1:kmax.0.1]))
fit.status0.independent.1 <- lm(log(chaz0)~log(time), data=bhazs.uninformative.cens[chaz0>0 & chemo==1][kmin.0.1:kmax.0.1])
#abline(a = coef(fit.status0.independent.1)[1], b = coef(fit.status0.independent.1)[2], col = "red")
gamma.status0.independent.1 <- coef(fit.status0.independent.1)[2]
lambda.status0.independent.1 <- exp(coef(fit.status0.independent.1)[1]/gamma.status0.independent.1)
#plot(log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["time"]])[kmin.0.0:kmax.0.0],log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["chaz0"]][kmin.0.0:kmax.0.0]))
fit.status0.independent.0 <- lm(log(chaz0)~log(time), data=bhazs.uninformative.cens[chaz0>0 & chemo==0][kmin.0.0:kmax.0.0])
#abline(a = coef(fit.status0.independent.0)[1], b = coef(fit.status0.independent.0)[2], col = "red")
gamma.status0.independent.0 <- coef(fit.status0.independent.0)[2]
lambda.status0.independent.0 <- exp(coef(fit.status0.independent.0)[1]/gamma.status0.independent.0)

bhazs.uninformative.cens.long[time>=exp(log.t0.0) & time<=exp(log.t0.0) & chemo=="chemo = 1" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.independent.1*log(lambda.status0.independent.1) + gamma.status0.independent.1*log(time))]
bhazs.uninformative.cens.long[time>=exp(log.t0.0) & time<=exp(log.t1.0) & chemo=="chemo = 0" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.independent.0*log(lambda.status0.independent.0) + gamma.status0.independent.0*log(time))]

ggplot(bhazs.uninformative.cens.long[!is.na(fit.chaz) & status=="status = 0"]) + geom_point(aes(x=log(time), y=log(value))) +
  geom_line(aes(log(time), y=log(fit.chaz)), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18), legend.position="none",
        strip.text = element_text(size=16),
        plot.title = element_text(size = 16, hjust = -0.15),
        strip.background = element_blank())+ 
  ylab("log(chaz)") + ggtitle("Fitting a single straight line:")
#+END_SRC

#+RESULTS[(2022-07-15 13:29:04) c4672571a21784a70ce0d6a66afa7d8de296143c]:
[[file:./figures/fig-log-hazards-log-time-hazard0-independent.png]]


#+BEGIN_SRC R :results file graphics :file ./figures/fig-hazards-time-hazard0-independent.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs.uninformative.cens.long[chemo=="chemo = 1" & status=="status = 0",    
           fit.chaz:=exp(gamma.status0.independent.1*log(lambda.status0.independent.1) + gamma.status0.independent.1*log(time))]
bhazs.uninformative.cens.long[chemo=="chemo = 0" & status=="status = 0",
           fit.chaz:=exp(gamma.status0.independent.0*log(lambda.status0.independent.0) + gamma.status0.independent.0*log(time))]
 
ggplot(bhazs.uninformative.cens.long[!is.na(fit.chaz) & status=="status = 0"]) + 
  geom_point(aes(x=time, y=value)) +
  geom_line(aes(time, y=fit.chaz), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
        strip.text = element_text(size=16),
        plot.title = element_text(size = 16, hjust = -0.1), 
        strip.background = element_blank())+
  ylab("chaz") + ggtitle("Resulting cumulative baseline hazards:")
#+END_SRC

#+RESULTS[(2022-07-15 13:29:07) f3929d27a7c99e9df7547c1ade1f165b3a9eed9b]:
[[file:./figures/fig-hazards-time-hazard0-independent.png]]


*** Censoring events (independent, but with changepoint)

#+BEGIN_SRC R :results file graphics :file ./figures/fig-log-hazards-log-time-hazard0-independent-changepoint.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs.uninformative.cens <- bhaz.uninformative.cens[[1]]   
bhazs.uninformative.cens[, chaz0 := cumsum(dhaz0*exp0), by = "chemo"] 

bhazs.uninformative.cens.long <- melt(bhazs.uninformative.cens, id.vars=c("chemo", "time")) 
bhazs.uninformative.cens.long[, variable2:=substr(variable,1,4)] 
bhazs.uninformative.cens.long <- bhazs.uninformative.cens.long[variable2=="chaz"][, status:=paste0("status = ", gsub("chaz", "", variable))]
bhazs.uninformative.cens.long[, chemo:=paste0("chemo = ", chemo)]
 
log.t0.0 <- 1.2
log.t1.0 <- 1.9    
log.t2.0 <- 3.5

kmin.0.t1.1 <- min((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==1]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["time"]])>log.t0.0])
kmax.0.t1.1 <- max((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==1]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["time"]])<log.t1.0])
kmin.0.t1.0 <- min((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==0]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["time"]])>log.t0.0])
kmax.0.t1.0 <- max((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==0]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["time"]])<log.t1.0])

kmin.0.t2.1 <- min((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==1]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["time"]])>log.t1.0])
kmax.0.t2.1 <- max((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==1]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["time"]])<log.t2.0])
kmin.0.t2.0 <- min((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==0]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["time"]])>log.t1.0])
kmax.0.t2.0 <- max((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==0]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["time"]])<log.t2.0])

#plot(log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["time"]])[kmin.0.t1.1:kmax.0.t1.1],log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["chaz0"]][kmin.0.t1.1:kmax.0.t1.1]))
fit.status0.independent.t1.1 <- lm(log(chaz0)~log(time), data=bhazs.uninformative.cens[chaz0>0 & chemo==1][kmin.0.t1.1:kmax.0.t1.1])
#abline(a = coef(fit.status0.independent.t1.1)[1], b = coef(fit.status0.independent.t1.1)[2], col = "red")
(gamma.status0.independent.t1.1 <- coef(fit.status0.independent.t1.1)[2])
(lambda.status0.independent.t1.1 <- exp(coef(fit.status0.independent.t1.1)[1]/gamma.status0.independent.t1.1))
#plot(log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["time"]])[kmin.0.t1.0:kmax.0.t1.0],log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["chaz0"]][kmin.0.t1.0:kmax.0.t1.0]))
fit.status0.independent.t1.0 <- lm(log(chaz0)~log(time), data=bhazs.uninformative.cens[chaz0>0 & chemo==0][kmin.0.t1.0:kmax.0.t1.0])
#abline(a = coef(fit.status0.independent.t1.0)[1], b = coef(fit.status0.independent.t1.0)[2], col = "red")
(gamma.status0.independent.t1.0 <- coef(fit.status0.independent.t1.0)[2])
(lambda.status0.independent.t1.0 <- exp(coef(fit.status0.independent.t1.0)[1]/gamma.status0.independent.t1.0))

# plot(log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["time"]])[kmin.0.t2.1:kmax.0.t2.1],log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["chaz0"]][kmin.0.t2.1:kmax.0.t2.1]))
fit.status0.independent.t2.1 <- lm(log(chaz0)~log(time), data=bhazs.uninformative.cens[chaz0>0 & chemo==1][kmin.0.t2.1:kmax.0.t2.1])
#abline(a = coef(fit.status0.independent.t2.1)[1], b = coef(fit.status0.independent.t2.1)[2], col = "red")
(gamma.status0.independent.t2.1 <- coef(fit.status0.independent.t2.1)[2])
(lambda.status0.independent.t2.1 <- exp(coef(fit.status0.independent.t2.1)[1]/gamma.status0.independent.t2.1))
#plot(log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["time"]])[kmin.0.t2.0:kmax.0.t2.0],log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["chaz0"]][kmin.0.t2.0:kmax.0.t2.0]))
fit.status0.independent.t2.0 <- lm(log(chaz0)~log(time), data=bhazs.uninformative.cens[chaz0>0 & chemo==0][kmin.0.t2.0:kmax.0.t2.0])
#abline(a = coef(fit.status0.independent.t2.0)[1], b = coef(fit.status0.independent.t2.0)[2], col = "red")
(gamma.status0.independent.t2.0 <- coef(fit.status0.independent.t2.0)[2])
(lambda.status0.independent.t2.0 <- exp(coef(fit.status0.independent.t2.0)[1]/gamma.status0.independent.t2.0))

bhazs.uninformative.cens.long[time>=exp(log.t0.0) & time<=exp(log.t1.0) & chemo=="chemo = 1" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.independent.t1.1*log(lambda.status0.independent.t1.1) + gamma.status0.independent.t1.1*log(time))]
bhazs.uninformative.cens.long[time>=exp(log.t0.0) & time<=exp(log.t1.0) & chemo=="chemo = 0" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.independent.t1.0*log(lambda.status0.independent.t1.0) + gamma.status0.independent.t1.0*log(time))]
bhazs.uninformative.cens.long[time>=exp(log.t1.0) & time<=exp(log.t2.0) & chemo=="chemo = 1" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.independent.t2.1*log(lambda.status0.independent.t2.1) + gamma.status0.independent.t2.1*log(time))]
bhazs.uninformative.cens.long[time>=exp(log.t1.0) & time<=exp(log.t2.0) & chemo=="chemo = 0" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.independent.t2.0*log(lambda.status0.independent.t2.0) + gamma.status0.independent.t2.0*log(time))]

ggplot(bhazs.uninformative.cens.long[!is.na(fit.chaz) & status=="status = 0"]) + geom_point(aes(x=log(time), y=log(value))) +
  geom_line(aes(log(time), y=log(fit.chaz)), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18), legend.position="none",
        strip.text = element_text(size=16),
        plot.title = element_text(size = 16, hjust = -0.15),
        strip.background = element_blank())+  
  ylab("log(chaz)") + ggtitle("Fitting two straight lines:")
#+END_SRC

#+RESULTS[(2022-07-15 13:29:09) 6a709442929919f2eb88821167202bc11a6ea279]:
[[file:./figures/fig-log-hazards-log-time-hazard0-independent-changepoint.png]]


#+BEGIN_SRC R :results file graphics :file ./figures/fig-hazards-time-hazard0-independent-changepoint.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs.uninformative.cens.long[time<=exp(log.t1.0) & chemo=="chemo = 1" & status=="status = 0",     
           fit.chaz:=exp(gamma.status0.independent.t1.1*log(lambda.status0.independent.t1.1) + gamma.status0.independent.t1.1*log(time))]
bhazs.uninformative.cens.long[time<=exp(log.t1.0) & chemo=="chemo = 0" & status=="status = 0",
           fit.chaz:=exp(gamma.status0.independent.t1.0*log(lambda.status0.independent.t1.0) + gamma.status0.independent.t1.0*log(time))]
bhazs.uninformative.cens.long[time>=exp(log.t1.0) & chemo=="chemo = 1" & status=="status = 0",
           fit.chaz:=exp(gamma.status0.independent.t2.1*log(lambda.status0.independent.t2.1) + gamma.status0.independent.t2.1*log(time))]
bhazs.uninformative.cens.long[time>=exp(log.t1.0) & chemo=="chemo = 0" & status=="status = 0",
           fit.chaz:=exp(gamma.status0.independent.t2.0*log(lambda.status0.independent.t2.0) + gamma.status0.independent.t2.0*log(time))]
  
ggplot(bhazs.uninformative.cens.long[!is.na(fit.chaz) & status=="status = 0"]) + 
  geom_point(aes(x=time, y=value)) +
  geom_line(aes(time, y=fit.chaz), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
        strip.text = element_text(size=16),
        plot.title = element_text(size = 16, hjust = -0.1), 
        strip.background = element_blank())+
  ylab("chaz") + ggtitle("Resulting cumulative baseline hazards:")
#+END_SRC

#+RESULTS[(2022-07-15 13:29:11) ce839668bdc2e7c18cf0c26159552f4b8e925c75]:
[[file:./figures/fig-hazards-time-hazard0-independent-changepoint.png]]



*** Censoring events (independent, but with two changepoints)

#+BEGIN_SRC R :results file graphics :file ./figures/fig-log-hazards-log-time-hazard0-independent-2changepoints.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs.uninformative.cens <- bhaz.uninformative.cens[[1]]  
bhazs.uninformative.cens[, chaz0 := cumsum(dhaz0*exp0), by = "chemo"]  

bhazs.uninformative.cens.long <- melt(bhazs.uninformative.cens, id.vars=c("chemo", "time")) 
bhazs.uninformative.cens.long[, variable2:=substr(variable,1,4)] 
bhazs.uninformative.cens.long <- bhazs.uninformative.cens.long[variable2=="chaz"][, status:=paste0("status = ", gsub("chaz", "", variable))]
bhazs.uninformative.cens.long[, chemo:=paste0("chemo = ", chemo)]

log.t0.0 <- 1.2
log.t1.0 <- 1.9   
log.t2.0 <- 3.2
log.t3.0 <- 3.5

kmin.0.t1.1 <- min((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==1]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["time"]])>log.t0.0])
kmax.0.t1.1 <- max((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==1]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["time"]])<log.t1.0])
kmin.0.t1.0 <- min((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==0]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["time"]])>log.t0.0])
kmax.0.t1.0 <- max((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==0]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["time"]])<log.t1.0])

kmin.0.t2.1 <- min((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==1]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["time"]])>log.t1.0])
kmax.0.t2.1 <- max((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==1]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["time"]])<log.t2.0])
kmin.0.t2.0 <- min((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==0]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["time"]])>log.t1.0])
kmax.0.t2.0 <- max((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==0]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["time"]])<log.t2.0])

kmin.0.t3.1 <- min((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==1]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["time"]])>log.t2.0])
kmax.0.t3.1 <- max((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==1]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["time"]])<log.t3.0])
kmin.0.t3.0 <- min((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==0]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["time"]])>log.t2.0])
kmax.0.t3.0 <- max((1:nrow(bhazs.uninformative.cens[chaz0>0 & chemo==0]))[log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["time"]])<log.t3.0])

#plot(log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["time"]])[kmin.0.t1.1:kmax.0.t1.1],log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["chaz0"]][kmin.0.t1.1:kmax.0.t1.1]))
fit.status0.independent.t1.1 <- lm(log(chaz0)~log(time), data=bhazs.uninformative.cens[chaz0>0 & chemo==1][kmin.0.t1.1:kmax.0.t1.1])
#abline(a = coef(fit.status0.independent.t1.1)[1], b = coef(fit.status0.independent.t1.1)[2], col = "red")
(gamma.status0.independent.t1.1 <- coef(fit.status0.independent.t1.1)[2])
(lambda.status0.independent.t1.1 <- exp(coef(fit.status0.independent.t1.1)[1]/gamma.status0.independent.t1.1))
#plot(log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["time"]])[kmin.0.t1.0:kmax.0.t1.0],log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["chaz0"]][kmin.0.t1.0:kmax.0.t1.0]))
fit.status0.independent.t1.0 <- lm(log(chaz0)~log(time), data=bhazs.uninformative.cens[chaz0>0 & chemo==0][kmin.0.t1.0:kmax.0.t1.0])
#abline(a = coef(fit.status0.independent.t1.0)[1], b = coef(fit.status0.independent.t1.0)[2], col = "red")
(gamma.status0.independent.t1.0 <- coef(fit.status0.independent.t1.0)[2])
(lambda.status0.independent.t1.0 <- exp(coef(fit.status0.independent.t1.0)[1]/gamma.status0.independent.t1.0))

# plot(log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["time"]])[kmin.0.t2.1:kmax.0.t2.1],log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["chaz0"]][kmin.0.t2.1:kmax.0.t2.1]))
fit.status0.independent.t2.1 <- lm(log(chaz0)~log(time), data=bhazs.uninformative.cens[chaz0>0 & chemo==1][kmin.0.t2.1:kmax.0.t2.1])
#abline(a = coef(fit.status0.independent.t2.1)[1], b = coef(fit.status0.independent.t2.1)[2], col = "red")
(gamma.status0.independent.t2.1 <- coef(fit.status0.independent.t2.1)[2])
(lambda.status0.independent.t2.1 <- exp(coef(fit.status0.independent.t2.1)[1]/gamma.status0.independent.t2.1))
#plot(log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["time"]])[kmin.0.t2.0:kmax.0.t2.0],log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["chaz0"]][kmin.0.t2.0:kmax.0.t2.0]))
fit.status0.independent.t2.0 <- lm(log(chaz0)~log(time), data=bhazs.uninformative.cens[chaz0>0 & chemo==0][kmin.0.t2.0:kmax.0.t2.0])
#abline(a = coef(fit.status0.independent.t2.0)[1], b = coef(fit.status0.independent.t2.0)[2], col = "red")
(gamma.status0.independent.t2.0 <- coef(fit.status0.independent.t2.0)[2])
(lambda.status0.independent.t2.0 <- exp(coef(fit.status0.independent.t2.0)[1]/gamma.status0.independent.t2.0))

# plot(log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["time"]])[kmin.0.t3.1:kmax.0.t3.1],log(bhazs.uninformative.cens[chaz0>0 & chemo==1][["chaz0"]][kmin.0.t3.1:kmax.0.t3.1]))
fit.status0.independent.t3.1 <- lm(log(chaz0)~log(time), data=bhazs.uninformative.cens[chaz0>0 & chemo==1][kmin.0.t3.1:kmax.0.t3.1])
#abline(a = coef(fit.status0.independent.t3.1)[1], b = coef(fit.status0.independent.t3.1)[2], col = "red")
(gamma.status0.independent.t3.1 <- coef(fit.status0.independent.t3.1)[2])
(lambda.status0.independent.t3.1 <- exp(coef(fit.status0.independent.t3.1)[1]/gamma.status0.independent.t3.1))
#plot(log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["time"]])[kmin.0.t3.0:kmax.0.t3.0],log(bhazs.uninformative.cens[chaz0>0 & chemo==0][["chaz0"]][kmin.0.t3.0:kmax.0.t3.0]))
fit.status0.independent.t3.0 <- lm(log(chaz0)~log(time), data=bhazs.uninformative.cens[chaz0>0 & chemo==0][kmin.0.t3.0:kmax.0.t3.0])
#abline(a = coef(fit.status0.independent.t3.0)[1], b = coef(fit.status0.independent.t3.0)[2], col = "red")
(gamma.status0.independent.t3.0 <- coef(fit.status0.independent.t3.0)[2])
(lambda.status0.independent.t3.0 <- exp(coef(fit.status0.independent.t3.0)[1]/gamma.status0.independent.t3.0))


bhazs.uninformative.cens.long[time>=exp(log.t0.0) & time<=exp(log.t1.0) & chemo=="chemo = 1" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.independent.t1.1*log(lambda.status0.independent.t1.1) + gamma.status0.independent.t1.1*log(time))]
bhazs.uninformative.cens.long[time>=exp(log.t0.0) & time<=exp(log.t1.0) & chemo=="chemo = 0" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.independent.t1.0*log(lambda.status0.independent.t1.0) + gamma.status0.independent.t1.0*log(time))]
bhazs.uninformative.cens.long[time>=exp(log.t1.0) & time<=exp(log.t2.0) & chemo=="chemo = 1" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.independent.t2.1*log(lambda.status0.independent.t2.1) + gamma.status0.independent.t2.1*log(time))]
bhazs.uninformative.cens.long[time>=exp(log.t1.0) & time<=exp(log.t2.0) & chemo=="chemo = 0" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.independent.t2.0*log(lambda.status0.independent.t2.0) + gamma.status0.independent.t2.0*log(time))]
bhazs.uninformative.cens.long[time>=exp(log.t2.0) & time<=exp(log.t3.0) & chemo=="chemo = 1" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.independent.t3.1*log(lambda.status0.independent.t3.1) + gamma.status0.independent.t3.1*log(time))]
bhazs.uninformative.cens.long[time>=exp(log.t2.0) & time<=exp(log.t3.0) & chemo=="chemo = 0" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.independent.t3.0*log(lambda.status0.independent.t3.0) + gamma.status0.independent.t3.0*log(time))]

ggplot(bhazs.uninformative.cens.long[!is.na(fit.chaz) & status=="status = 0"]) + geom_point(aes(x=log(time), y=log(value))) +
  geom_line(aes(log(time), y=log(fit.chaz)), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18), legend.position="none",
        strip.text = element_text(size=16),
        plot.title = element_text(size = 16, hjust = -0.15),
        strip.background = element_blank())+  
  ylab("log(chaz)") + ggtitle("Fitting three straight lines:")
#+END_SRC

#+RESULTS[(2022-07-15 13:29:13) 025e5bdd6680e451f38ec10024c831baba265d81]:
[[file:./figures/fig-log-hazards-log-time-hazard0-independent-2changepoints.png]]


#+BEGIN_SRC R :results file graphics :file ./figures/fig-hazards-time-hazard0-independent-2changepoints.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs.uninformative.cens.long[time<=exp(log.t1.0) & chemo=="chemo = 1" & status=="status = 0",   
                              fit.chaz:=exp(gamma.status0.independent.t1.1*log(lambda.status0.independent.t1.1) + gamma.status0.independent.t1.1*log(time))]
bhazs.uninformative.cens.long[time<=exp(log.t1.0) & chemo=="chemo = 0" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.independent.t1.0*log(lambda.status0.independent.t1.0) + gamma.status0.independent.t1.0*log(time))]
bhazs.uninformative.cens.long[time>=exp(log.t1.0) & time <= exp(log.t2.0) & chemo=="chemo = 1" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.independent.t2.1*log(lambda.status0.independent.t2.1) + gamma.status0.independent.t2.1*log(time))]
bhazs.uninformative.cens.long[time>=exp(log.t1.0) & time <= exp(log.t2.0) & chemo=="chemo = 0" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.independent.t2.0*log(lambda.status0.independent.t2.0) + gamma.status0.independent.t2.0*log(time))]
bhazs.uninformative.cens.long[time>=exp(log.t2.0) & chemo=="chemo = 1" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.independent.t3.1*log(lambda.status0.independent.t3.1) + gamma.status0.independent.t3.1*log(time))]
bhazs.uninformative.cens.long[time>=exp(log.t2.0) & chemo=="chemo = 0" & status=="status = 0",
                              fit.chaz:=exp(gamma.status0.independent.t3.0*log(lambda.status0.independent.t3.0) + gamma.status0.independent.t3.0*log(time))]
 
ggplot(bhazs.uninformative.cens.long[!is.na(fit.chaz) & status=="status = 0"]) + 
  geom_point(aes(x=time, y=value)) +
  geom_line(aes(time, y=fit.chaz), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
        strip.text = element_text(size=16), 
        plot.title = element_text(size = 16, hjust = -0.1), 
        strip.background = element_blank())+
  ylab("chaz") + ggtitle("Resulting cumulative baseline hazards:") 
#+END_SRC

#+RESULTS[(2022-07-15 13:29:15) 3543e711e190e04ad3824edc10d77e5157cc40d2]:
[[file:./figures/fig-hazards-time-hazard0-independent-2changepoints.png]]




** Simulating data 


#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results none :exports none  :session *R* :cache yes
#######################################################################################

#--- function to simulate from Weibull (change-points!) 
#

simulate.change.weibull.3 <- function(seed = 100,
                                      follic.sim = follic, #sim.sample = nrow(follic),
                                      change.weibull.parameters = list(
                                        nu.A1.t1 = gamma.status1.t1.1,
                                        nu.A1.t2 = gamma.status1.t2.1,
                                        nu.A1.t3 = gamma.status1.t3.1,
                                        nu.A0.t1 = gamma.status1.t1.0,
                                        nu.A0.t2 = gamma.status1.t2.0,
                                        nu.A0.t3 = gamma.status1.t3.0,
                                        eta.A1.t1 = lambda.status1.t1.1^gamma.status1.t1.1,
                                        eta.A1.t2 = lambda.status1.t2.1^gamma.status1.t2.1,
                                        eta.A1.t3 = lambda.status1.t3.1^gamma.status1.t3.1,
                                        eta.A0.t1 = lambda.status1.t1.0^gamma.status1.t1.0,
                                        eta.A0.t2 = lambda.status1.t2.0^gamma.status1.t2.0,
                                        eta.A0.t3 = lambda.status1.t3.0^gamma.status1.t3.0                                            
                                      ),
                                      t0 = log(bhazs[chaz1>0 & chemo==0][["time"]])[kmax.1.t1.0],
                                      t1 = log(bhazs[chaz1>0 & chemo==0][["time"]])[kmax.1.t2.0],
                                      counterfactual = NULL,
                                      observed.covars = TRUE,
                                      fit.cox = bhaz.cox[["1"]]) {

  set.seed(seed)

  if (length(names(coef(fit.cox)))>0) {
    exp.covar <- follic.sim[, exp(rowSums(sapply(names(coef(fit.cox))[names(coef(fit.cox)) != "chemo" & sapply(names(coef(fit.cox)), function(name) length(grep("period", name)) == 0)], function(covar) {
      coef(fit.cox)[covar]*follic.sim[[covar]]
    })))]
  } else {
    exp.covar <- exp(0)
  }

  Lambda.inv <- function(u, t, nu, eta, nu2=nu, eta2=eta, nu3=nu, eta3=eta) {
    return( rowSums(cbind((u <= (eta*exp.covar)*t0^{nu}) *
                          (( (u + eta*exp.covar*t^{nu}) /
                             (eta*exp.covar) )^{1/nu} - t),
    (u > (eta*exp.covar)*t0^{nu} & u <= (eta2*exp.covar)*t1^{nu2}) *
    (( (u - (eta2*exp.covar)*t0^{nu2} +
        eta2*exp.covar*t0^{nu2}) /
       (eta2*exp.covar) )^{1/nu2} - t),
    (u > (eta2*exp.covar)*t1^{nu2}) *
    (( (u - (eta3*exp.covar)*t1^{nu3} +
        eta3*exp.covar*t1^{nu3}) /
       (eta3*exp.covar) )^{1/nu3} - t)), na.rm=TRUE) )
  }

  U <- -log(runif(nrow(follic.sim)))

  Tout.A1 <- Lambda.inv(U, 0,
                        nu = change.weibull.parameters[["nu.A1.t1"]],
                        eta = change.weibull.parameters[["eta.A1.t1"]],
                        nu2 = change.weibull.parameters[["nu.A1.t2"]],
                        eta2 = change.weibull.parameters[["eta.A1.t2"]],
                        nu3 = change.weibull.parameters[["nu.A1.t3"]],
                        eta3 = change.weibull.parameters[["eta.A1.t3"]])

  Tout.A0 <- Lambda.inv(U, 0,
                        nu = change.weibull.parameters[["nu.A0.t1"]],
                        eta = change.weibull.parameters[["eta.A0.t1"]],
                        nu2 = change.weibull.parameters[["nu.A0.t2"]],
                        eta2 = change.weibull.parameters[["eta.A0.t2"]],
                        nu3 = change.weibull.parameters[["nu.A0.t3"]],
                        eta3 = change.weibull.parameters[["eta.A0.t3"]])

  if (length(counterfactual) == 0) {
    return(Tout <- follic.sim[["chemo"]]*Tout.A1 + (1-follic.sim[["chemo"]])*Tout.A0)
  } else if (counterfactual == 1) {
    return(Tout.A1) 
  } else {
    return(Tout.A0) 
  }
}

#######################################################################################

#--- function to simulate follic data 
#

simulate.follic.3 <- function(observed.covars = TRUE,
                              sim.sample = nrow(follic),
                              counterfactual = NULL,
                              seed = 100,
                              informative.censoring = TRUE,
                              keep.times = FALSE) {

  set.seed(seed)

  if (observed.covars) {
    if (length(sim.sample)>0) {
      follic.sim <- follic[sample(1:nrow(follic), sim.sample, replace=TRUE)]
    } else {
      follic.sim <- follic
    }
  } else {
    follic.sim <- data.table(stage = rbinom(sim.sample, 1, p.stage),
                             chemo = rbinom(sim.sample, 1, p.chemo),
                             age = rnorm(sim.sample, p.age[[1]][["mean"]], p.age[[1]][["sd"]]),
                             hgb = rnorm(sim.sample, p.hgb[[1]][["mean"]], p.hgb[[1]][["sd"]]))
  }

  if (informative.censoring) {
    T0 <- simulate.change.weibull.3(follic.sim = follic.sim,
                                    seed = seed*1010,
                                    change.weibull.parameters = list(
                                      nu.A1.t1 = gamma.status0.t1.1,
                                      nu.A1.t2 = gamma.status0.t2.1,
                                      nu.A1.t3 = gamma.status0.t3.1,
                                      nu.A0.t1 = gamma.status0.t1.0,
                                      nu.A0.t2 = gamma.status0.t2.0,
                                      nu.A0.t3 = gamma.status0.t3.0,
                                      eta.A1.t1 = lambda.status0.t1.1^gamma.status0.t1.1,
                                      eta.A1.t2 = lambda.status0.t2.1^gamma.status0.t2.1,
                                      eta.A1.t3 = lambda.status0.t3.1^gamma.status0.t3.1,
                                      eta.A0.t1 = lambda.status0.t1.0^gamma.status0.t1.0,
                                      eta.A0.t2 = lambda.status0.t2.0^gamma.status0.t2.0,
                                      eta.A0.t3 = lambda.status0.t3.0^gamma.status0.t3.0                                            
                                    ),
                                    counterfactual = counterfactual,
                                    t0 = (bhazs[chaz0>0 & chemo==0][["time"]])[kmax.0.t1.0],
                                    t1 = (bhazs[chaz0>0 & chemo==0][["time"]])[kmax.0.t2.0], 
                                    fit.cox = bhaz.cox[["0"]])
  } else {
    T0 <- simulate.change.weibull.3(follic.sim = follic.sim,
                                    seed = seed*1010,
                                    change.weibull.parameters = list(
                                      nu.A1.t1 = gamma.status0.independent.t1.1,
                                      nu.A1.t2 = gamma.status0.independent.t2.1,
                                      nu.A1.t3 = gamma.status0.independent.t3.1,
                                      nu.A0.t1 = gamma.status0.independent.t1.0,
                                      nu.A0.t2 = gamma.status0.independent.t2.0,
                                      nu.A0.t3 = gamma.status0.independent.t3.0,
                                      eta.A1.t1 = lambda.status0.independent.t1.1^gamma.status0.independent.t1.1,
                                      eta.A1.t2 = lambda.status0.independent.t2.1^gamma.status0.independent.t2.1,
                                      eta.A1.t3 = lambda.status0.independent.t3.1^gamma.status0.independent.t3.1,
                                      eta.A0.t1 = lambda.status0.independent.t1.0^gamma.status0.independent.t1.0,
                                      eta.A0.t2 = lambda.status0.independent.t2.0^gamma.status0.independent.t2.0,
                                      eta.A0.t3 = lambda.status0.independent.t3.0^gamma.status0.independent.t3.0                                            
                                    ),
                                    counterfactual = counterfactual,
                                    t0 = (bhazs.uninformative.cens[chaz0>0 & chemo==0][["time"]])[kmax.0.t1.0],
                                    t1 = (bhazs.uninformative.cens[chaz0>0 & chemo==0][["time"]])[kmax.0.t2.0], 
                                    fit.cox = bhaz.uninformative.cens[["0"]])
  }

  T1 <- simulate.change.weibull.3(follic.sim = follic.sim,
                                  seed = seed*9010,
                                  change.weibull.parameters = list(
                                    nu.A1.t1 = gamma.status1.t1.1,
                                    nu.A1.t2 = gamma.status1.t2.1,
                                    nu.A1.t3 = gamma.status1.t3.1,
                                    nu.A0.t1 = gamma.status1.t1.0,
                                    nu.A0.t2 = gamma.status1.t2.0,
                                    nu.A0.t3 = gamma.status1.t3.0,
                                    eta.A1.t1 = lambda.status1.t1.1^gamma.status1.t1.1,
                                    eta.A1.t2 = lambda.status1.t2.1^gamma.status1.t2.1,
                                    eta.A1.t3 = lambda.status1.t3.1^gamma.status1.t3.1,
                                    eta.A0.t1 = lambda.status1.t1.0^gamma.status1.t1.0,
                                    eta.A0.t2 = lambda.status1.t2.0^gamma.status1.t2.0,
                                    eta.A0.t3 = lambda.status1.t3.0^gamma.status1.t3.0
                                  ),
                                  counterfactual = counterfactual,
                                  t0 = (bhazs[chaz1>0 & chemo==0][["time"]])[kmax.1.t1.0],
                                  t1 = (bhazs[chaz1>0 & chemo==0][["time"]])[kmax.1.t2.0], 
                                  fit.cox = bhaz.cox[["1"]])

  T2 <- simulate.change.weibull.3(follic.sim = follic.sim,
                                  seed = seed*5010,
                                  change.weibull.parameters = list(
                                    nu.A1.t1 = gamma.status2.t1.1,
                                    nu.A1.t2 = gamma.status2.t2.1,
                                    nu.A1.t3 = gamma.status2.t3.1,
                                    nu.A0.t1 = gamma.status2.t1.0,
                                    nu.A0.t2 = gamma.status2.t2.0,
                                    nu.A0.t3 = gamma.status2.t3.0,
                                    eta.A1.t1 = lambda.status2.t1.1^gamma.status2.t1.1,
                                    eta.A1.t2 = lambda.status2.t2.1^gamma.status2.t2.1,
                                    eta.A1.t3 = lambda.status2.t3.1^gamma.status2.t3.1,
                                    eta.A0.t1 = lambda.status2.t1.0^gamma.status2.t1.0,
                                    eta.A0.t2 = lambda.status2.t2.0^gamma.status2.t2.0,
                                    eta.A0.t3 = lambda.status2.t3.0^gamma.status2.t3.0
                                  ),
                                  counterfactual = counterfactual, 
                                  t0 = (bhazs[chaz2>0 & chemo==0][["time"]])[kmax.2.t1.0],
                                  t1 = (bhazs[chaz2>0 & chemo==0][["time"]])[kmax.2.t2.0], 
                                  fit.cox = bhaz.cox[["2"]])

  if (length(counterfactual)>0) {
    follic.sim[, time := apply(cbind(T1, T2), 1, min)]
  } else {
    follic.sim[, time := apply(cbind(T1, T2, T0), 1, min)]
  }

  follic.sim[, status := 1*(time == T1) + 2*(time == T2)]

  return(follic.sim)
}
 
#######################################################################################
#+END_SRC

*** Simulate data with covariate dependent censoring

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results none :exports code  :session *R* :cache yes  
seed <- 291 
sim.follic.3 <- simulate.follic.3(observed.covars = TRUE,
                                  sim.sample = nrow(follic),
                                  counterfactual = NULL,
                                  seed = seed, 
                                  informative.censoring = TRUE,
                                  keep.times = FALSE) 
#+END_SRC


#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports code  :session *R* :cache yes
sim.follic.3[, table(status)] 
follic[, table(status)]    
#+END_SRC    

#+RESULTS[(2022-07-15 13:30:00) 351dd6b808f459cd1067a4817fb8cd33c6d8e935]:
: status
:   0   1   2 
: 191 277  73
: status
:   0   1   2 
: 193 272  76

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports code  :session *R* :cache yes
sim.follic.3[, summary(time)]   
follic[, summary(time)]  
#+END_SRC    

#+RESULTS[(2022-07-15 13:30:07) a1efb85f81c56e5fd4517816d796820209ab2338]:
:      Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
:  0.002336  1.456435  4.231241  7.040730  9.641411 31.046863
:      Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
:  0.002738  1.919233  5.464750  7.393791 10.850103 31.101985

*** Simulate data with independent censoring

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results none :exports code  :session *R* :cache yes  
seed <- 291 
sim.follic.3 <- simulate.follic.3(observed.covars = TRUE,
                                  sim.sample = nrow(follic),
                                  counterfactual = NULL,
                                  seed = seed,  
                                  informative.censoring = FALSE,
                                  keep.times = FALSE)
#+END_SRC


#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports code  :session *R* :cache yes
sim.follic.3[, table(status)]   
follic[, table(status)]   
#+END_SRC    

#+RESULTS[(2022-07-15 13:30:31) dee820801aad9cbd0a62ffc3d822bda47c07a50f]:
: status
:   0   1   2 
: 184 281  76
: status
:   0   1   2 
: 193 272  76

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports code  :session *R* :cache yes
sim.follic.3[, summary(time)]  
follic[, summary(time)]    
#+END_SRC    

#+RESULTS[(2022-07-15 13:30:36) 55f107a16248c21bf81207707eeae8769d522931]:
:      Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
:  0.002336  1.623638  4.860915  7.020093 10.004625 30.136407
:      Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
:  0.002738  1.919233  5.464750  7.393791 10.850103 31.101985

