* Web appendix

This is the web appendix to our manuscript entitled /Estimation of/
/time-specific intervention effects on continuously distributed/
/time-to-event outcomes by targeted maximum likelihood estimation/.

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results none :exports none  :session *R* :cache yes  
  setwd("~/research/TMLE-from-2020june/survival-baseline/Web-appendix-iterative-competing-risks-tmle")
#+END_SRC

** Overview


** Load packages and functions

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results none :exports code  :session *R* :cache yes  
library(data.table)
library(zoo)
library(glmnet)
library(survival)
library(stringr)
library(ggplot2) 
library(ltmle)
library(nleqslv)
library(parallel)
library(foreach)
library(doParallel)
library(prodlim)
library(gridExtra)
library(survival)
library(riskRegression)
library(Matrix)
library(hdnom)
library(MASS)
library(xtable)
library(timereg)
library(cmprsk)
library(randomForestSRC)
#+END_SRC    

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results none :exports code  :session *R* :cache yes  
source("./R/sim.data.continuous.R") 
source("./R/contmle.R") 
source("./R/cox.loss.fun.R") 
source("./R/lebesgue.loss.fun.R")
source("./R/cv.fun.R")     
source("./R/basis.fun.R")
source("./R/hal.screening.R")
source("./R/fit.hal.R")   
source("./R/cox.sl.R")  
source("./R/fit.categorical.R")
source("./R/predict.catfit.R")
#+END_SRC    


** Data example

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results output :exports code  :session *R* :cache yes  
data(follic, package="randomForestSRC")
follic <- data.table(follic) 

#-- convert variables:
follic[, stage:=as.numeric(clinstg==2)]
follic[, chemo:=as.numeric(ch=="Y")]
follic <- follic[, -c("clinstg", "ch"), with=FALSE]

follic[, table(status)] 
follic[, summary(time)]
follic[time<=10, table(status)]
#+END_SRC    

#+RESULTS[(2022-07-13 14:50:29) d004072359b7d08f7b3f05e1b46ada2fc7070c00]:
: status
:   0   1   2 
: 193 272  76
:      Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
:  0.002738  1.919233  5.464750  7.393791 10.850103 31.101985
: status
:   0   1   2 
:  95 251  46


*** Simulating data 

#+ATTR_LATEX: :options otherkeywords={}, deletekeywords={}
#+BEGIN_SRC R  :results none :exports none  :session *R* :cache yes
#######################################################################################

#--- try see what super learner would pick
bhaz.sl <- contmle(follic, estimation=list("outcome"=list(fit="sl",
                                                          model=Surv(time, status==1)~chemo+stage+hgb+age,
                                                          lambda.cvs=seq(0.008, 0.02, length=10)),
                                           "cens"=list(fit="sl",
                                                       model=Surv(time, status==0)~chemo+stage+hgb+age),
                                           "cr2"=list(fit="sl",
                                                      model=Surv(time, status==2)~chemo+stage+hgb+age)
                                           ),
                   treat.model=chemo~stage,
                   treat.effect="ate",
                   no.small.steps=500,
                   sl.models=list(mod1=list(Surv(time, status==1)~chemo+stage+hgb+age, t0 = (1:50)/2000)), 
                   output.km=TRUE,
                   output.bhaz=TRUE, 
                   V=3, lambda.cvs=seq(0.1, 0.03, length=10), maxit=1e5, penalize.time=FALSE,
                   verbose=TRUE,
                   iterative=TRUE,
                   tau=20, target=1)

#--- uninformative censoring
bhaz.uninformative.cens <-
  contmle(follic, estimation=list("outcome"=list(fit="cox",
                                                 model=Surv(time, status==1)~chemo+stage+hgb+age, lambda.cvs=seq(0.008,
                                                                                                                 0.02, length=10)), "cens"=list(fit="cox", model=Surv(time,
                                                                                                                                                                      status==0)~1), "cr2"=list(fit="cox", model=Surv(time,
                                                                                                                                                                                                                      status==2)~chemo+stage+hgb+age) ), treat.model=chemo~stage,
          treat.effect="ate", no.small.steps=500,
          sl.models=list(mod1=list(Surv(time, status==1)~chemo+stage+hgb+age, t0
                                   = (1:50)/2000)), output.km=TRUE, output.bhaz=TRUE, V=3,
          lambda.cvs=seq(0.1, 0.03, length=10), maxit=1e5, penalize.time=FALSE,
          verbose=TRUE, iterative=TRUE, tau=20, target=1)


#######################################################################################

bhazs <- bhaz.sl[[1]]

bhazs[, chaz1 := cumsum(dhaz1*exp1), by = "chemo"]
bhazs[, chaz2 := cumsum(dhaz2*exp2), by = "chemo"] 
bhazs[, chaz0 := cumsum(dhaz0*exp0), by = "chemo"]

#######################################################################################
#+END_SRC


#+BEGIN_SRC R :results file graphics :file ./figures/fig-log-hazards-log-time.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs.long <- melt(bhazs, id.vars=c("chemo", "time"))
bhazs.long[, variable2:=substr(variable,1,4)]
bhazs.long <- bhazs.long[variable2=="chaz"][, status:=paste0("status = ", gsub("chaz", "", variable))]
bhazs.long[, chemo:=paste0("chemo = ", chemo)]

ggplot(bhazs.long) + geom_point(aes(x=log(time), y=log(value))) +
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
        strip.text = element_text(size=16),
        strip.background = element_blank())+
  ylab("log(chaz)")
#+END_SRC

#+RESULTS[(2022-07-13 15:18:40) a0fdb4f3794e9dbd283027fa7d02b9b37b2d5401]:
[[file:./figures/fig-log-hazards-log-time.png]]

#+BEGIN_SRC R :results file graphics :file ./figures/fig-log-hazards-log-time-hazard1-changepoint.png :exports none :session *R* :cache yes :width 500 :height 500

  log.t0.1 <- -0.5
  log.t1.1 <- 0.75
  log.t2.1 <- 2

  kmin.1.t1.1 <- min((1:nrow(bhazs[chaz1>0 & chemo==1]))[log(bhazs[chaz1>0 & chemo==1][["time"]])>log.t0.1])
  kmax.1.t1.1 <- max((1:nrow(bhazs[chaz1>0 & chemo==1]))[log(bhazs[chaz1>0 & chemo==1][["time"]])<log.t1.1])
  kmin.1.t1.0 <- min((1:nrow(bhazs[chaz1>0 & chemo==0]))[log(bhazs[chaz1>0 & chemo==0][["time"]])>log.t0.1])
  kmax.1.t1.0 <- max((1:nrow(bhazs[chaz1>0 & chemo==0]))[log(bhazs[chaz1>0 & chemo==0][["time"]])<log.t1.1])

  kmin.1.t2.1 <- min((1:nrow(bhazs[chaz1>0 & chemo==1]))[log(bhazs[chaz1>0 & chemo==1][["time"]])>log.t1.1])
  kmax.1.t2.1 <- max((1:nrow(bhazs[chaz1>0 & chemo==1]))[log(bhazs[chaz1>0 & chemo==1][["time"]])<log.t2.1])
  kmin.1.t2.0 <- min((1:nrow(bhazs[chaz1>0 & chemo==0]))[log(bhazs[chaz1>0 & chemo==0][["time"]])>log.t1.1])
  kmax.1.t2.0 <- max((1:nrow(bhazs[chaz1>0 & chemo==0]))[log(bhazs[chaz1>0 & chemo==0][["time"]])<log.t2.1])

  #plot(log(bhazs[chaz1>0 & chemo==1][["time"]])[kmin.1.t1.1:kmax.1.t1.1],log(bhazs[chaz1>0 & chemo==1][["chaz1"]][kmin.1.t1.1:kmax.1.t1.1]))
  fit.status1.t1.1 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==1][kmin.1.t1.1:kmax.1.t1.1])
  #abline(a = coef(fit.status1.t1.1)[1], b = coef(fit.status1.t1.1)[2], col = "red")
  (gamma.status1.t1.1 <- coef(fit.status1.t1.1)[2])
  (lambda.status1.t1.1 <- exp(coef(fit.status1.t1.1)[1]/gamma.status1.t1.1))
  #plot(log(bhazs[chaz1>0 & chemo==0][["time"]])[kmin.1.t1.0:kmax.1.t1.0],log(bhazs[chaz1>0 & chemo==0][["chaz1"]][kmin.1.t1.0:kmax.1.t1.0]))
  fit.status1.t1.0 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==0][kmin.1.t1.0:kmax.1.t1.0])
  #abline(a = coef(fit.status1.t1.0)[1], b = coef(fit.status1.t1.0)[2], col = "red")
  (gamma.status1.t1.0 <- coef(fit.status1.t1.0)[2])
  (lambda.status1.t1.0 <- exp(coef(fit.status1.t1.0)[1]/gamma.status1.t1.0))

 # plot(log(bhazs[chaz1>0 & chemo==1][["time"]])[kmin.1.t2.1:kmax.1.t2.1],log(bhazs[chaz1>0 & chemo==1][["chaz1"]][kmin.1.t2.1:kmax.1.t2.1]))
fit.status1.t2.1 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==1][kmin.1.t2.1:kmax.1.t2.1])
#abline(a = coef(fit.status1.t2.1)[1], b = coef(fit.status1.t2.1)[2], col = "red")
(gamma.status1.t2.1 <- coef(fit.status1.t2.1)[2])
(lambda.status1.t2.1 <- exp(coef(fit.status1.t2.1)[1]/gamma.status1.t2.1))
#plot(log(bhazs[chaz1>0 & chemo==0][["time"]])[kmin.1.t2.0:kmax.1.t2.0],log(bhazs[chaz1>0 & chemo==0][["chaz1"]][kmin.1.t2.0:kmax.1.t2.0]))
fit.status1.t2.0 <- lm(log(chaz1)~log(time), data=bhazs[chaz1>0 & chemo==0][kmin.1.t2.0:kmax.1.t2.0])
#abline(a = coef(fit.status1.t2.0)[1], b = coef(fit.status1.t2.0)[2], col = "red")
(gamma.status1.t2.0 <- coef(fit.status1.t2.0)[2])
(lambda.status1.t2.0 <- exp(coef(fit.status1.t2.0)[1]/gamma.status1.t2.0))

  bhazs.long[time>=exp(log.t0.1) & time<=exp(log.t1.1) & chemo=="chemo = 1" & status=="status = 1",
	     fit.chaz:=exp(gamma.status1.t1.1*log(lambda.status1.t1.1) + gamma.status1.t1.1*log(time))]
  bhazs.long[time>=exp(log.t0.1) & time<=exp(log.t1.1) & chemo=="chemo = 0" & status=="status = 1",
	     fit.chaz:=exp(gamma.status1.t1.0*log(lambda.status1.t1.0) + gamma.status1.t1.0*log(time))]
  bhazs.long[time>=exp(log.t1.1) & time<=exp(log.t2.1) & chemo=="chemo = 1" & status=="status = 1",
	     fit.chaz:=exp(gamma.status1.t2.1*log(lambda.status1.t2.1) + gamma.status1.t2.1*log(time))]
  bhazs.long[time>=exp(log.t1.1) & time<=exp(log.t2.1) & chemo=="chemo = 0" & status=="status = 1",
	     fit.chaz:=exp(gamma.status1.t2.0*log(lambda.status1.t2.0) + gamma.status1.t2.0*log(time))]

  ggplot(bhazs.long[!is.na(fit.chaz) & status=="status = 1"]) + geom_point(aes(x=log(time), y=log(value))) +
    geom_line(aes(log(time), y=log(fit.chaz)), col="red")+
    facet_grid(chemo~status, scales="free")+theme_bw()+
    theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
	  strip.text = element_text(size=16),
	  strip.background = element_blank())+
    ylab("log(chaz)") 
#+END_SRC

#+RESULTS[(2022-07-13 15:28:25) f78bdf93318e2d479690bde18a5b926717d0c70b]:
[[file:./figures/fig-log-hazards-log-time-hazard1-changepoint.png]]


#+BEGIN_SRC R :results file graphics :file ./figures/fig-log-hazards-time-hazard1-changepoint.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs.long[time<=exp(log.t1.1) & chemo=="chemo = 1" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t1.1*log(lambda.status1.t1.1) + gamma.status1.t1.1*log(time))]
bhazs.long[time<=exp(log.t1.1) & chemo=="chemo = 0" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t1.0*log(lambda.status1.t1.0) + gamma.status1.t1.0*log(time))]
bhazs.long[time>=exp(log.t1.1) & chemo=="chemo = 1" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t2.1*log(lambda.status1.t2.1) + gamma.status1.t2.1*log(time))]
bhazs.long[time>=exp(log.t1.1) & chemo=="chemo = 0" & status=="status = 1",
           fit.chaz:=exp(gamma.status1.t2.0*log(lambda.status1.t2.0) + gamma.status1.t2.0*log(time))]

ggplot(bhazs.long[!is.na(fit.chaz) & status=="status = 1"]) +
  geom_point(aes(x=time, y=value)) +
  geom_line(aes(time, y=fit.chaz), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
        strip.text = element_text(size=16),
        strip.background = element_blank())+
  ylab("log(chaz)") 
#+END_SRC

#+RESULTS[(2022-07-13 15:28:29) ef71bb292e62990a3d32085bd7998f3c2d8202ab]:
[[file:./figures/fig-log-hazards-time-hazard1-changepoint.png]]


#+BEGIN_SRC R :results file graphics :file ./figures/fig-log-hazards-log-time-hazard2-changepoint.png :exports none :session *R* :cache yes :width 500 :height 500

log.t0.2 <- 0 
log.t1.2 <- 1.5
log.t2.2 <- 3

kmin.2.t1.1 <- min((1:nrow(bhazs[chaz2>0 & chemo==1]))[log(bhazs[chaz2>0 & chemo==1][["time"]])>log.t0.2])
kmax.2.t1.1 <- max((1:nrow(bhazs[chaz2>0 & chemo==1]))[log(bhazs[chaz2>0 & chemo==1][["time"]])<log.t1.2])
kmin.2.t1.0 <- min((1:nrow(bhazs[chaz2>0 & chemo==0]))[log(bhazs[chaz2>0 & chemo==0][["time"]])>log.t0.2])
kmax.2.t1.0 <- max((1:nrow(bhazs[chaz2>0 & chemo==0]))[log(bhazs[chaz2>0 & chemo==0][["time"]])<log.t1.2])

kmin.2.t2.1 <- min((1:nrow(bhazs[chaz2>0 & chemo==1]))[log(bhazs[chaz2>0 & chemo==1][["time"]])>log.t1.2])
kmax.2.t2.1 <- max((1:nrow(bhazs[chaz2>0 & chemo==1]))[log(bhazs[chaz2>0 & chemo==1][["time"]])<log.t2.2])
kmin.2.t2.0 <- min((1:nrow(bhazs[chaz2>0 & chemo==0]))[log(bhazs[chaz2>0 & chemo==0][["time"]])>log.t1.2])
kmax.2.t2.0 <- max((1:nrow(bhazs[chaz2>0 & chemo==0]))[log(bhazs[chaz2>0 & chemo==0][["time"]])<log.t2.2])

#plot(log(bhazs[chaz2>0 & chemo==1][["time"]])[kmin.2.t1.1:kmax.2.t1.1],log(bhazs[chaz2>0 & chemo==1][["chaz2"]][kmin.2.t1.1:kmax.2.t1.1]))
fit.status2.t1.1 <- lm(log(chaz2)~log(time), data=bhazs[chaz2>0 & chemo==1][kmin.2.t1.1:kmax.2.t1.1])
#abline(a = coef(fit.status2.t1.1)[1], b = coef(fit.status2.t1.1)[2], col = "red")
(gamma.status2.t1.1 <- coef(fit.status2.t1.1)[2])
(lambda.status2.t1.1 <- exp(coef(fit.status2.t1.1)[1]/gamma.status2.t1.1))
#plot(log(bhazs[chaz2>0 & chemo==0][["time"]])[kmin.2.t1.0:kmax.2.t1.0],log(bhazs[chaz2>0 & chemo==0][["chaz2"]][kmin.2.t1.0:kmax.2.t1.0]))
fit.status2.t1.0 <- lm(log(chaz2)~log(time), data=bhazs[chaz2>0 & chemo==0][kmin.2.t1.0:kmax.2.t1.0])
#abline(a = coef(fit.status2.t1.0)[1], b = coef(fit.status2.t1.0)[2], col = "red")
(gamma.status2.t1.0 <- coef(fit.status2.t1.0)[2])
(lambda.status2.t1.0 <- exp(coef(fit.status2.t1.0)[1]/gamma.status2.t1.0))

# plot(log(bhazs[chaz2>0 & chemo==1][["time"]])[kmin.2.t2.1:kmax.2.t2.1],log(bhazs[chaz2>0 & chemo==1][["chaz2"]][kmin.2.t2.1:kmax.2.t2.1]))
fit.status2.t2.1 <- lm(log(chaz2)~log(time), data=bhazs[chaz2>0 & chemo==1][kmin.2.t2.1:kmax.2.t2.1])
#abline(a = coef(fit.status2.t2.1)[1], b = coef(fit.status2.t2.1)[2], col = "red")
(gamma.status2.t2.1 <- coef(fit.status2.t2.1)[2])
(lambda.status2.t2.1 <- exp(coef(fit.status2.t2.1)[1]/gamma.status2.t2.1))
#plot(log(bhazs[chaz2>0 & chemo==0][["time"]])[kmin.2.t2.0:kmax.2.t2.0],log(bhazs[chaz2>0 & chemo==0][["chaz2"]][kmin.2.t2.0:kmax.2.t2.0]))
fit.status2.t2.0 <- lm(log(chaz2)~log(time), data=bhazs[chaz2>0 & chemo==0][kmin.2.t2.0:kmax.2.t2.0])
#abline(a = coef(fit.status2.t2.0)[1], b = coef(fit.status2.t2.0)[2], col = "red")
(gamma.status2.t2.0 <- coef(fit.status2.t2.0)[2])
(lambda.status2.t2.0 <- exp(coef(fit.status2.t2.0)[1]/gamma.status2.t2.0))

bhazs.long[time>=exp(log.t0.2) & time<=exp(log.t1.2) & chemo=="chemo = 1" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t1.1*log(lambda.status2.t1.1) + gamma.status2.t1.1*log(time))]
bhazs.long[time>=exp(log.t0.2) & time<=exp(log.t1.2) & chemo=="chemo = 0" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t1.0*log(lambda.status2.t1.0) + gamma.status2.t1.0*log(time))]
bhazs.long[time>=exp(log.t1.2) & time<=exp(log.t2.2) & chemo=="chemo = 1" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t2.1*log(lambda.status2.t2.1) + gamma.status2.t2.1*log(time))]
bhazs.long[time>=exp(log.t1.2) & time<=exp(log.t2.2) & chemo=="chemo = 0" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t2.0*log(lambda.status2.t2.0) + gamma.status2.t2.0*log(time))]

ggplot(bhazs.long[!is.na(fit.chaz) & status=="status = 2"]) + geom_point(aes(x=log(time), y=log(value))) +
  geom_line(aes(log(time), y=log(fit.chaz)), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18), legend.position="none",
        strip.text = element_text(size=16), 
        strip.background = element_blank())+
  ylab("log(chaz)") 
#+END_SRC

#+RESULTS[(2022-07-13 15:34:08) f3337906219467ec394dfa61d39a25bf33f700ea]:
[[file:./figures/fig-log-hazards-log-time-hazard2-changepoint.png]]


#+BEGIN_SRC R :results file graphics :file ./figures/fig-log-hazards-time-hazard2-changepoint.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs.long[time<=exp(log.t1.2) & chemo=="chemo = 1" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t1.1*log(lambda.status2.t1.1) + gamma.status2.t1.1*log(time))]
bhazs.long[time<=exp(log.t1.2) & chemo=="chemo = 0" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t1.0*log(lambda.status2.t1.0) + gamma.status2.t1.0*log(time))]
bhazs.long[time>=exp(log.t1.2) & chemo=="chemo = 1" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t2.1*log(lambda.status2.t2.1) + gamma.status2.t2.1*log(time))]
bhazs.long[time>=exp(log.t1.2) & chemo=="chemo = 0" & status=="status = 2",
           fit.chaz:=exp(gamma.status2.t2.0*log(lambda.status2.t2.0) + gamma.status2.t2.0*log(time))]

ggplot(bhazs.long[!is.na(fit.chaz) & status=="status = 2"]) + 
  geom_point(aes(x=time, y=value)) +
  geom_line(aes(time, y=fit.chaz), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
        strip.text = element_text(size=16),
        strip.background = element_blank())+
  ylab("log(chaz)") 
#+END_SRC

#+RESULTS[(2022-07-13 15:35:06) 7bda31fabcc6d410125100843cb1b75ce3305c1b]:
[[file:./figures/fig-log-hazards-time-hazard2-changepoint.png]]



#+BEGIN_SRC R :results file graphics :file ./figures/fig-log-hazards-log-time-hazard0-changepoint.png :exports none :session *R* :cache yes :width 500 :height 500

log.t0.2 <- 1.2
log.t1.2 <- 1.9
log.t2.2 <- 3.2

kmin.0.t1.1 <- min((1:nrow(bhazs[chaz0>0 & chemo==1]))[log(bhazs[chaz0>0 & chemo==1][["time"]])>log.t0.2])
kmax.0.t1.1 <- max((1:nrow(bhazs[chaz0>0 & chemo==1]))[log(bhazs[chaz0>0 & chemo==1][["time"]])<log.t1.2])
kmin.0.t1.0 <- min((1:nrow(bhazs[chaz0>0 & chemo==0]))[log(bhazs[chaz0>0 & chemo==0][["time"]])>log.t0.2])
kmax.0.t1.0 <- max((1:nrow(bhazs[chaz0>0 & chemo==0]))[log(bhazs[chaz0>0 & chemo==0][["time"]])<log.t1.2])

kmin.0.t2.1 <- min((1:nrow(bhazs[chaz0>0 & chemo==1]))[log(bhazs[chaz0>0 & chemo==1][["time"]])>log.t1.2])
kmax.0.t2.1 <- max((1:nrow(bhazs[chaz0>0 & chemo==1]))[log(bhazs[chaz0>0 & chemo==1][["time"]])<log.t2.2])
kmin.0.t2.0 <- min((1:nrow(bhazs[chaz0>0 & chemo==0]))[log(bhazs[chaz0>0 & chemo==0][["time"]])>log.t1.2])
kmax.0.t2.0 <- max((1:nrow(bhazs[chaz0>0 & chemo==0]))[log(bhazs[chaz0>0 & chemo==0][["time"]])<log.t2.2])

#plot(log(bhazs[chaz0>0 & chemo==1][["time"]])[kmin.0.t1.1:kmax.0.t1.1],log(bhazs[chaz0>0 & chemo==1][["chaz0"]][kmin.0.t1.1:kmax.0.t1.1]))
fit.status0.t1.1 <- lm(log(chaz0)~log(time), data=bhazs[chaz0>0 & chemo==1][kmin.0.t1.1:kmax.0.t1.1])
#abline(a = coef(fit.status0.t1.1)[1], b = coef(fit.status0.t1.1)[2], col = "red")
(gamma.status0.t1.1 <- coef(fit.status0.t1.1)[2])
(lambda.status0.t1.1 <- exp(coef(fit.status0.t1.1)[1]/gamma.status0.t1.1))
#plot(log(bhazs[chaz0>0 & chemo==0][["time"]])[kmin.0.t1.0:kmax.0.t1.0],log(bhazs[chaz0>0 & chemo==0][["chaz0"]][kmin.0.t1.0:kmax.0.t1.0]))
fit.status0.t1.0 <- lm(log(chaz0)~log(time), data=bhazs[chaz0>0 & chemo==0][kmin.0.t1.0:kmax.0.t1.0])
#abline(a = coef(fit.status0.t1.0)[1], b = coef(fit.status0.t1.0)[2], col = "red")
(gamma.status0.t1.0 <- coef(fit.status0.t1.0)[2])
(lambda.status0.t1.0 <- exp(coef(fit.status0.t1.0)[1]/gamma.status0.t1.0))

# plot(log(bhazs[chaz0>0 & chemo==1][["time"]])[kmin.0.t2.1:kmax.0.t2.1],log(bhazs[chaz0>0 & chemo==1][["chaz0"]][kmin.0.t2.1:kmax.0.t2.1]))
fit.status0.t2.1 <- lm(log(chaz0)~log(time), data=bhazs[chaz0>0 & chemo==1][kmin.0.t2.1:kmax.0.t2.1])
#abline(a = coef(fit.status0.t2.1)[1], b = coef(fit.status0.t2.1)[2], col = "red")
(gamma.status0.t2.1 <- coef(fit.status0.t2.1)[2])
(lambda.status0.t2.1 <- exp(coef(fit.status0.t2.1)[1]/gamma.status0.t2.1))
#plot(log(bhazs[chaz0>0 & chemo==0][["time"]])[kmin.0.t2.0:kmax.0.t2.0],log(bhazs[chaz0>0 & chemo==0][["chaz0"]][kmin.0.t2.0:kmax.0.t2.0]))
fit.status0.t2.0 <- lm(log(chaz0)~log(time), data=bhazs[chaz0>0 & chemo==0][kmin.0.t2.0:kmax.0.t2.0])
#abline(a = coef(fit.status0.t2.0)[1], b = coef(fit.status0.t2.0)[2], col = "red")
(gamma.status0.t2.0 <- coef(fit.status0.t2.0)[2])
(lambda.status0.t2.0 <- exp(coef(fit.status0.t2.0)[1]/gamma.status0.t2.0))

bhazs.long[time>=exp(log.t0.2) & time<=exp(log.t1.2) & chemo=="chemo = 1" & status=="status = 0",
           fit.chaz:=exp(gamma.status0.t1.1*log(lambda.status0.t1.1) + gamma.status0.t1.1*log(time))]
bhazs.long[time>=exp(log.t0.2) & time<=exp(log.t1.2) & chemo=="chemo = 0" & status=="status = 0",
           fit.chaz:=exp(gamma.status0.t1.0*log(lambda.status0.t1.0) + gamma.status0.t1.0*log(time))]
bhazs.long[time>=exp(log.t1.2) & time<=exp(log.t2.2) & chemo=="chemo = 1" & status=="status = 0",
           fit.chaz:=exp(gamma.status0.t2.1*log(lambda.status0.t2.1) + gamma.status0.t2.1*log(time))]
bhazs.long[time>=exp(log.t1.2) & time<=exp(log.t2.2) & chemo=="chemo = 0" & status=="status = 0",
           fit.chaz:=exp(gamma.status0.t2.0*log(lambda.status0.t2.0) + gamma.status0.t2.0*log(time))]

ggplot(bhazs.long[!is.na(fit.chaz) & status=="status = 0"]) + geom_point(aes(x=log(time), y=log(value))) +
  geom_line(aes(log(time), y=log(fit.chaz)), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18), legend.position="none",
        strip.text = element_text(size=16), 
        strip.background = element_blank())+ 
  ylab("log(chaz)") 
#+END_SRC

#+RESULTS[(2022-07-13 15:36:53) 4430b2aae392bf1b3f45d4bff23742427858b1a5]:
[[file:./figures/fig-log-hazards-log-time-hazard0-changepoint.png]]


#+BEGIN_SRC R :results file graphics :file ./figures/fig-log-hazards-time-hazard0-changepoint.png :exports none :session *R* :cache yes :width 500 :height 500
bhazs.long[time<=exp(log.t1.2) & chemo=="chemo = 1" & status=="status = 0", 
           fit.chaz:=exp(gamma.status0.t1.1*log(lambda.status0.t1.1) + gamma.status0.t1.1*log(time))]
bhazs.long[time<=exp(log.t1.2) & chemo=="chemo = 0" & status=="status = 0",
           fit.chaz:=exp(gamma.status0.t1.0*log(lambda.status0.t1.0) + gamma.status0.t1.0*log(time))]
bhazs.long[time>=exp(log.t1.2) & chemo=="chemo = 1" & status=="status = 0",
           fit.chaz:=exp(gamma.status0.t2.1*log(lambda.status0.t2.1) + gamma.status0.t2.1*log(time))]
bhazs.long[time>=exp(log.t1.2) & chemo=="chemo = 0" & status=="status = 0",
           fit.chaz:=exp(gamma.status0.t2.0*log(lambda.status0.t2.0) + gamma.status0.t2.0*log(time))]

ggplot(bhazs.long[!is.na(fit.chaz) & status=="status = 0"]) + 
  geom_point(aes(x=time, y=value)) +
  geom_line(aes(time, y=fit.chaz), col="red")+
  facet_grid(chemo~status, scales="free")+theme_bw()+
  theme(axis.text=element_text(size=12),axis.title=element_text(size=18),legend.position="none",
        strip.text = element_text(size=16),
        strip.background = element_blank())+
  ylab("log(chaz)") 
#+END_SRC

#+RESULTS[(2022-07-13 15:37:03) 71eec49ec8e95a3369fd4a2f37a3446d6c656819]:
[[file:./figures/fig-log-hazards-time-hazard0-changepoint.png]]
